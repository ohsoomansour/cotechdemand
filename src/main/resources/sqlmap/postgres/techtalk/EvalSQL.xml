<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EvalSQL">
<!-- ====================================================================================== -->
<!--						역량진단평가 관리 (TE_EVAL_MNG)											-->
<!-- ====================================================================================== -->
	<sql id="where_eval_mng">
		/*
			역량진단평가관리 조회조건(공통)
		*/
		<if test="eval_year != null and eval_year != ''">
			AND A.EVAL_YEAR = #{eval_year}
		</if>
		<if test="eval_pcd != null and eval_pcd != ''">
			AND A.EVAL_PCD = #{eval_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN = #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID = #{svcsid}
		</if>
	</sql>


	<select id="EvalSQL.dolistEvalSeqCombo" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalSeqCombo
						역량진단평가관리 목록 조회
		*/

		SELECT A.EVAL_SEQ, A.EVAL_TITLE, A.EVAL_YEAR, A.USEYN
		FROM TE_EVAL_MNG A
		WHERE 1 = 1 
		ORDER BY EVAL_YEAR, EVAL_SEQ DESC
	</select>
	
	<select id="EvalSQL.dolistEvalMng" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalMng
						역량진단평가관리 목록 조회
		*/
		SELECT AA.*
			, UFN_CODENM('EVAL_TCD', AA.EVAL_TCD, NULL) AS EVAL_TNM
			, UFN_CODENM('MRK_TCD', AA.MRK_TCD, NULL) AS MRK_TNM
			, UFN_CODENM('SET_TCD', AA.SET_TCD, NULL) AS SET_TNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ, A.*
			FROM TE_EVAL_MNG A
			WHERE 1 = 1 
			<include refid="where_eval_mng"/>
		) AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>

	<select id="EvalSQL.getoneEvalMng" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalMng
						역량진단평가관리 정보 조회
		*/
		SELECT A.*
			, UFN_CODENM('EVAL_TCD', A.EVAL_TCD, NULL) AS EVAL_TNM
			, UFN_CODENM('MRK_TCD', A.MRK_TCD, NULL) AS MRK_TNM
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
		FROM TE_EVAL_MNG A
		WHERE A.EVAL_SEQ = #{eval_seq}
	</select>

	<select id="EvalSQL.getActiveEvalSeq" parameterType="dataMap" resultType="int">
		/*
			SQL ID: EvalSQL.getActiveEvalSeq
						현재 운영중인 역량평가 조회
		*/
		SELECT A.EVAL_SEQ
		FROM TE_EVAL_MNG A
		WHERE A.USEYN = 'Y' AND A.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')
	</select>

	<insert id="EvalSQL.appendEvalMng" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalMng
						역량진단평가관리 등록
		*/
		INSERT INTO TE_EVAL_MNG
			( EVAL_SEQ, UP_SEQ
			, EVAL_TITLE, EVAL_YEAR, EVAL_CONT
			, EVAL_TOTPT, QUE_COUNT, APL_COUNT
			, EVAL_WEIGHT, REAPP_SUBRT, EVAL_ACTM
			, EVAL_ODAY, EVAL_SDAY, EVAL_EDAY
			, EVAL_OPT, EVAL_PCD, EVAL_TCD
			, MRK_TCD, SET_TCD, REGUID
			, MODUID, REGDTM, MODDTM
			, USEYN, ASPSID, SVCSID
			, O_WEIGHT, U_WEIGHT, D_WEIGHT
			, P_WEIGHT )
		VALUES
			( #{eval_seq}
			, #{up_seq}
			, #{eval_title}
			, #{eval_year}
			, #{eval_cont}
			, #{eval_totpt}
			, #{que_count}
			, #{apl_count}
			, #{eval_weight}
			, #{reapp_subrt}
			, #{eval_actm}
			, REPLACE(#{eval_oday}, '-', '')
			, REPLACE(#{eval_sday}, '-', '')
			, REPLACE(#{eval_eday}, '-', '')
			, #{eval_opt}
			, #{eval_pcd}
			, #{eval_tcd}
			, #{mrk_tcd}
			, #{set_tcd}
			, #{reguid}
			, #{moduid}
			, SYSDATE
			, SYSDATE
			, #{useyn}
			, #{aspsid}
			, #{svcsid}
			, #{o_weight}, #{u_weight}, #{d_weight}, #{p_weight} )

	</insert>

	<update id="EvalSQL.appendEvalMngAll" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalMngAll
						역량진단평가관리 등록 (전체 조직)
		*/
		INSERT INTO TE_EVAL
			( EVAL_SEQ, ORGNO, UP_SEQ
			, EVAL_TITLE, EVAL_YEAR, EVAL_CONT
			, EVAL_TOTPT, QUE_COUNT, APL_COUNT
			, EVAL_WEIGHT, REAPP_SUBRT, EVAL_ACTM
			, EVAL_ODAY, EVAL_SDAY, EVAL_EDAY
			, EVAL_OPT, EVAL_PCD, EVAL_TCD
			, MRK_TCD, SET_TCD, REGUID
			, MODUID, REGDTM, MODDTM
			, USEYN, ASPSID, SVCSID
			, O_WEIGHT, U_WEIGHT, D_WEIGHT
			, P_WEIGHT )
		SELECT DISTINCT
			#{eval_seq}		AS EVAL_SEQ
			, AA.ORGNO			AS ORGNO
			, #{up_seq}			AS UP_SEQ
			, #{eval_title} || ' - ' || AA.ORGNM	AS EVAL_TITLE 
			, #{eval_year}      AS EVAL_YEAR  
			, #{eval_cont}      AS EVAL_CONT  
			, #{eval_totpt}     AS EVAL_TOTPT 
			, #{que_count}      AS QUE_COUNT  
			, #{apl_count}      AS APL_COUNT  
			, #{eval_weight}    AS EVAL_WEIGHT
			, #{reapp_subrt}    AS REAPP_SUBRT
			, #{eval_actm}      AS EVAL_ACTM  
			, REPLACE(#{eval_oday}, '-', '')	AS EVAL_ODAY
			, REPLACE(#{eval_sday}, '-', '')    AS EVAL_SDAY
			, REPLACE(#{eval_eday}, '-', '')    AS EVAL_EDAY
			, #{eval_opt}		AS EVAL_OPT
			, #{eval_pcd}       AS EVAL_PCD
			, #{eval_tcd}       AS EVAL_TCD
			, #{mrk_tcd}        AS MRK_TCD
			, #{set_tcd}        AS SET_TCD
			, #{reguid}         AS REGUID 
			, #{moduid}         AS MODUID 
			, SYSDATE			AS REGDTM
			, SYSDATE			AS MODDTM
			, #{useyn}			AS USEYN		
			, #{aspsid}         AS ASPSID  
			, #{svcsid}         AS SVCSID  
			, #{o_weight}       AS O_WEIGHT
			, #{u_weight}       AS U_WEIGHT
			, #{d_weight}       AS D_WEIGHT
			, #{p_weight}       AS P_WEIGHT
		FROM ( SELECT A.*, (SELECT COUNT(1) FROM TU_ORGAN B WHERE B.UP_SEQ = A.ORGNO) CNT FROM TU_ORGAN A ) AA
		WHERE AA.CNT = 0
		
	</update>

	<update id="EvalSQL.modifyEvalMng" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalMng
						역량진단평가관리 수정
		*/

		UPDATE TE_EVAL_MNG
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="eval_title	!= ''"> , EVAL_TITLE	= #{eval_title}</if>
		<if test="up_seq		!= ''"> , UP_SEQ		= #{up_seq}</if>
		<if test="eval_year		!= ''"> , EVAL_YEAR		= #{eval_year}</if>
		<if test="eval_cont		!= ''"> , EVAL_CONT		= #{eval_cont}</if>
		<if test="eval_totpt	!= ''"> , EVAL_TOTPT	= #{eval_totpt}</if>
		<if test="que_count		!= ''"> , QUE_COUNT		= #{que_count}</if>
		<if test="apl_count		!= ''"> , APL_COUNT		= #{apl_count}</if>
		<if test="eval_weight	!= ''"> , EVAL_WEIGHT	= #{eval_weight}</if>
		<if test="reapp_subrt	!= ''"> , REAPP_SUBRT	= #{reapp_subrt}</if>
		<if test="eval_actm		!= ''"> , EVAL_ACTM		= #{eval_actm}</if>
		<if test="eval_oday		!= ''"> , EVAL_ODAY		= REPLACE(#{eval_oday}, '-', '')</if>
		<if test="eval_sday		!= ''"> , EVAL_SDAY		= REPLACE(#{eval_sday}, '-', '')</if>
		<if test="eval_eday		!= ''"> , EVAL_EDAY		= REPLACE(#{eval_eday}, '-', '')</if>
		<if test="eval_opt		!= ''"> , EVAL_OPT		= #{eval_opt}</if>
		<if test="eval_pcd		!= ''"> , EVAL_PCD		= #{eval_pcd}</if>
		<if test="eval_tcd		!= ''"> , EVAL_TCD		= #{eval_tcd}</if>
		<if test="mrk_tcd		!= ''"> , MRK_TCD		= #{mrk_tcd}</if>
		<if test="set_tcd		!= ''"> , SET_TCD		= #{set_tcd}</if>
		<if test="useyn			!= ''"> , USEYN			= #{useyn}</if>
		<if test="o_weight		!= ''"> , O_WEIGHT		= #{o_weight}</if>
		<if test="u_weight		!= ''"> , U_WEIGHT		= #{u_weight}</if>
		<if test="d_weight		!= ''"> , D_WEIGHT		= #{d_weight}</if>
		<if test="p_weight		!= ''"> , P_WEIGHT		= #{p_weight}</if>
		WHERE EVAL_SEQ = #{eval_seq}

	</update>

	<delete id="EvalSQL.removeEvalMng" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalMng
						역량진단평가관리 삭제
		*/
		DELETE FROM TE_EVAL_MNG
		WHERE 1 = 1
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
			AND EVAL_SEQ = #{eval_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
			AND SVCSID = #{svcsid}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(aspsid)">
			AND ASPSID = #{aspsid}
		</if>
	</delete>

	<update id="EvalSQL.activeEvalMng" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.activeEvalMng
						역량진단평가관리 상태변경
		*/

		UPDATE TE_EVAL_MNG
		SET MODDTM = SYSDATE, MODUID = #{moduid}, USEYN = DECODE(EVAL_SEQ, #{eval_seq}, 'Y', 'N')
		WHERE EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')

	</update>


<!-- ====================================================================================== -->
<!--						역량진단평가 (TE_EVAL)											-->
<!-- ====================================================================================== -->
	<sql id="where_eval">
		/*
			역량진단평가 조회조건(공통)
		*/
		<if test="eval_year != null and eval_year != ''">
			AND A.EVAL_YEAR = #{eval_year}
		</if>
		<if test="eval_pcd != null and eval_pcd != ''">
			AND A.EVAL_PCD = #{eval_pcd}
		</if>
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO = #{orgno}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN = #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID = #{svcsid}
		</if>
	</sql>


	<select id="EvalSQL.getoneEvalManage" resultType="DataMap">
		/*
			SQL ID : EvalSQL.getoneEvalManage
			조직별 역량진단평가 정보 조회
		*/

		SELECT A.*, B.ORGNM
		FROM TE_EVAL A, TU_ORGAN B
		WHERE 1 = 1
			AND B.ORGNO = A.ORGNO
			<if test="eval_seq != null and eval_seq != ''">
			AND A.EVAL_SEQ = #{eval_seq}
			</if>

			<if test="orgno != null and orgno != ''">
			AND A.ORGNO = #{orgno}
			</if>

			<if test="eval_year != null and eval_year != ''">
			AND A.EVAL_YEAR = #{eval_year}
			</if>

			<if test="eval_pcd != null and eval_pcd != ''">
			AND A.EVAL_PCD = #{eval_pcd}
			</if>

			<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID = #{svcsid}
			</if>
	</select>

	<select id="EvalSQL.countEvalManage" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalManage
						역량진단평가 목록 카운트
		*/

		SELECT COUNT(A.EVAL_SEQ) AS CNT
		FROM TE_EVAL A, TU_ORGAN B
		WHERE B.ORGNO = A.ORGNO
		<include refid="where_eval"/>
	</select>


	<select id="EvalSQL.countEvalSeq" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalSeq
						역량진단평가 신규키 발급 조회 (일년에 한 진단그룹별로 생성됨)
						EVAL_SEQ : (중요!!) 진단지 묶음을 관리하는 단위키
		*/

		SELECT NVL((CASE WHEN COUNT(1) = 1 THEN A.EVAL_SEQ ELSE 0 END), 0) AS EVAL_SEQ 
		FROM TE_EVAL A
		WHERE 1 = 1
			AND A.EVAL_YEAR = #{eval_year}
			AND A.USEYN = 'Y'
		GROUP BY EVAL_SEQ
	</select>


	<select id="EvalSQL.dolistEvalManage" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalManage
						역량진단평가 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('EVAL_TCD', AA.EVAL_TCD, NULL) AS EVAL_TNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY B.ORG_IDX ASC) AS RSEQ
				, A.*
				, B.ORGNM
				, (SELECT SUBSTR (XMLAGG (XMLELEMENT (a, ' >', C.ORGNM) ORDER BY C.ORG_LVL ASC ).EXTRACT ('//text()'), 2)
					FROM TU_ORGAN C
					WHERE 1=1
					START WITH C.ORGNO = A.ORGNO
					CONNECT BY PRIOR C.UP_SEQ = C.ORGNO
				   ) AS ARROW_ORG
				, (SELECT COUNT(*) FROM TU_MEMBER X WHERE X.ORGNO = A.ORGNO AND X.JLVL_PCD LIKE 'L%') AS MEMCNT
			FROM TE_EVAL A, TU_ORGAN B
			WHERE B.ORGNO = A.ORGNO
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
				AND A.EVAL_YEAR = #{eval_year}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
				AND A.EVAL_SEQ = #{eval_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND A.ORGNO IN (
					SELECT C.ORGNO FROM TU_ORGAN C
					WHERE 1=1
					START WITH C.ORGNO = #{orgno}
					CONNECT BY PRIOR C.ORGNO = C.UP_SEQ
				)
			</if>
		) AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}

	</select>

	<select id="EvalSQL.getoneEval" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEval
						역량진단평가 정보 조회
		*/
		SELECT A.*
			, UFN_CODENM('EVAL_TCD', A.EVAL_TCD, NULL) AS EVAL_TNM
			, UFN_CODENM('MRK_TCD', A.MRK_TCD, NULL) AS MRK_TNM
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
		FROM TE_EVAL A
		WHERE A.EVAL_SEQ = #{eval_seq} AND A.ORGNO = #{orgno}
	</select>

	<select id="EvalSQL.getoneEvalSeq" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalSeq
						역량진단평가 정보 조회
		*/
		SELECT A.*
			, UFN_CODENM('EVAL_TCD', A.EVAL_TCD, NULL) AS EVAL_TNM
			, UFN_CODENM('MRK_TCD', A.MRK_TCD, NULL) AS MRK_TNM
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
		FROM TE_EVAL A
		INNER JOIN TE_EVAL_MNG T ON A.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
		WHERE A.ORGNO = #{orgno}
		<if test="eval_year != ''">	AND A.EVAL_YEAR = #{eval_year}</if>
		<if test="eval_year == ''">	AND A.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')</if>
	</select>

	<insert id="EvalSQL.appendEval" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEval
						역량진단평가 등록
		*/
		INSERT INTO TE_EVAL
			( EVAL_SEQ, ORGNO, UP_SEQ
			, EVAL_TITLE, EVAL_YEAR, EVAL_CONT
			, EVAL_TOTPT, QUE_COUNT, APL_COUNT
			, EVAL_WEIGHT, REAPP_SUBRT, EVAL_ACTM
			, EVAL_ODAY, EVAL_SDAY, EVAL_EDAY
			, EVAL_OPT, EVAL_PCD, EVAL_TCD
			, MRK_TCD, SET_TCD, REGUID
			, MODUID, REGDTM, MODDTM
			, USEYN, ASPSID, SVCSID
			, O_WEIGHT, U_WEIGHT, D_WEIGHT
			, P_WEIGHT )
		VALUES
			( #{eval_seq}
			, #{orgno}
			, #{up_seq}
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_title)">
			, #{eval_title}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isEmpty(eval_title)">
			,(
				SELECT
					SUBSTR (XMLAGG (XMLELEMENT (a, ' >', C.ORGNM) ORDER BY C.ORG_LVL ASC ).EXTRACT ('//text()'), 2)
				FROM TU_ORGAN C
				WHERE
					C.UP_SEQ != 0
				START WITH C.ORGNO = #{orgno}
				CONNECT BY PRIOR C.UP_SEQ = C.ORGNO
			)
			</if>
			, #{eval_year}
			, #{eval_cont}
			, #{eval_totpt}
			, #{que_count}
			, #{apl_count}
			, #{eval_weight}
			, #{reapp_subrt}
			, #{eval_actm}
			, REPLACE(#{eval_oday}, '-', '')
			, REPLACE(#{eval_sday}, '-', '')
			, REPLACE(#{eval_eday}, '-', '')
			, #{eval_opt}
			, #{eval_pcd}
			, #{eval_tcd}
			, #{mrk_tcd}
			, #{set_tcd}
			, #{reguid}
			, #{moduid}
			, SYSDATE
			, SYSDATE
			, #{useyn}
			, #{aspsid}
			, #{svcsid}
			, #{o_weight}, #{u_weight}, #{d_weight}, #{p_weight} )

	</insert>

	<update id="EvalSQL.modifyEval" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEval
						역량진단평가 수정
		*/

		UPDATE TE_EVAL
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="eval_title	!= ''"> , EVAL_TITLE	= #{eval_title}</if>
		<if test="up_seq		!= ''"> , UP_SEQ		= #{up_seq}</if>
		<if test="eval_year		!= ''"> , EVAL_YEAR		= #{eval_year}</if>
		<if test="eval_cont		!= ''"> , EVAL_CONT		= #{eval_cont}</if>
		<if test="eval_totpt	!= ''"> , EVAL_TOTPT	= #{eval_totpt}</if>
		<if test="que_count		!= ''"> , QUE_COUNT		= #{que_count}</if>
		<if test="apl_count		!= ''"> , APL_COUNT		= #{apl_count}</if>
		<if test="eval_weight	!= ''"> , EVAL_WEIGHT	= #{eval_weight}</if>
		<if test="reapp_subrt	!= ''"> , REAPP_SUBRT	= #{reapp_subrt}</if>
		<if test="eval_actm		!= ''"> , EVAL_ACTM		= #{eval_actm}</if>
		<if test="eval_oday		!= ''"> , EVAL_ODAY		= #{eval_oday}</if>
		<if test="eval_sday		!= ''"> , EVAL_SDAY		= #{eval_sday}</if>
		<if test="eval_eday		!= ''"> , EVAL_EDAY		= #{eval_eday}</if>
		<if test="eval_opt		!= ''"> , EVAL_OPT		= #{eval_opt}</if>
		<if test="eval_pcd		!= ''"> , EVAL_PCD		= #{eval_pcd}</if>
		<if test="eval_tcd		!= ''"> , EVAL_TCD		= #{eval_tcd}</if>
		<if test="mrk_tcd		!= ''"> , MRK_TCD		= #{mrk_tcd}</if>
		<if test="set_tcd		!= ''"> , SET_TCD		= #{set_tcd}</if>
		<if test="useyn			!= ''"> , USEYN			= #{useyn}</if>
		<if test="o_weight		!= ''"> , O_WEIGHT		= #{o_weight}</if>
		<if test="u_weight		!= ''"> , U_WEIGHT		= #{u_weight}</if>
		<if test="d_weight		!= ''"> , D_WEIGHT		= #{d_weight}</if>
		<if test="p_weight		!= ''"> , P_WEIGHT		= #{p_weight}</if>
		WHERE EVAL_SEQ = #{eval_seq} AND ORGNO = #{orgno}

	</update>

	<delete id="EvalSQL.removeEval" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEval
						역량진단평가 삭제
		*/
		DELETE FROM TE_EVAL
		WHERE 1 = 1
		<if test="@org.apache.commons.lang.StringUtils@isEmpty(eval_seq)">

			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_pcd)">
				AND EVAL_PCD = #{eval_pcd}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND ORGNO = #{orgno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
				AND EVAL_YEAR = #{eval_year}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isEmpty(eval_pcd)">
				<if test="@org.apache.commons.lang.StringUtils@isEmpty(orgno)">
					<if test="@org.apache.commons.lang.StringUtils@isEmpty(eval_year)">
						AND 1 = 2
					</if>
				</if>
			</if>

		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
			AND EVAL_SEQ = #{eval_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
			AND ORGNO = #{orgno}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
			AND SVCSID = #{svcsid}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(aspsid)">
			AND ASPSID = #{aspsid}
		</if>
	</delete>

<!-- ====================================================================================== -->
<!--						진단지 (TE_EVAL_PAPER)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalPaper" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalPaper
						진단지 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('PPR_TCD', A.PPR_TCD, NULL) AS PPR_TNM
		FROM TE_EVAL_PAPER A
		WHERE ROWNUM = 1 AND A.USEYN = 'Y'
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_pcd)">
				AND A.PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_seq)">
				AND A.PPR_SEQ	= #{ppr_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
				AND A.EVAL_SEQ	= #{eval_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND A.ORGNO		= #{orgno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(jobno)">
				AND A.JOBNO		= #{jobno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(up_seq)">
				AND A.UP_SEQ	= #{up_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(mse_seq)">
				AND A.PPR_SEQ = (
					SELECT P.PPR_SEQ FROM TE_EVAL_MSE M, TE_EVAL_APPLY P 
					WHERE M.MSE_SEQ = #{mse_seq} AND M.MSE_SEQ = P.MSE_SEQ AND P.PPR_PCD = #{ppr_pcd}
				)
			</if>

	</select>

	<select id="EvalSQL.countEvalPaper" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalPaper
						진단지 목록 카운트
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_PAPER PPR
		WHERE PPR.EVAL_SEQ = #{eval_seq}
			AND PPR.USEYN = 'Y'
		<if test="orgno != null and orgno != ''">
			AND PPR.ORGNO = #{orgno}
		</if>
		<if test="jobno != null and jobno != ''">
			AND PPR.JOBNO = #{jobno}
		</if>
		<if test="useyn != null and useyn != ''">
			AND PPR.USEYN = #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND PPR.ASPSID = #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND PPR.SVCSID = #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalPaper" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalPaper
						진단지문제출제 목록 조회
			, UFN_CODENM('SET_TCD', AA.SET_TCD, NULL) AS SET_TNM
		*/

		SELECT AA.*
			, UFN_CODENM('PPR_PCD', AA.PPR_PCD, NULL) AS PPR_PNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(sord)"> ${sidx}		</if>
			<if test="@org.apache.commons.lang.StringUtils@isEmpty(sord)"> A.REGDTM	</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(sord)"> ${sord}		</if>
			<if test="@org.apache.commons.lang.StringUtils@isEmpty(sord)"> ASC		</if>
			) AS RSEQ
				, A.*
			FROM TE_EVAL_PAPER A
			WHERE 1=1
				AND A.USEYN	= 'Y'
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_pcd)">
				AND A.PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_seq)">
				AND A.PPR_SEQ	= #{ppr_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
				AND A.EVAL_SEQ	= #{eval_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(useyn)">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(aspsid)">
				AND A.ASPSID	= #{aspsid}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND A.SVCSID	= #{svcsid}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND A.ORGNO	= #{orgno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(jobno)">
				AND A.JOBNO	= #{jobno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(up_seq)">
				AND A.UP_SEQ	= #{up_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(mse_seq)">
				AND A.PPR_SEQ = (SELECT P.PPR_SEQ FROM TE_EVAL_MSE M, TE_EVAL_APPLY P WHERE
				M.MSE_SEQ = #{mse_seq} AND M. MSE_SEQ =P.MSE_SEQ AND P.PPR_PCD = #{ppr_pcd}
				)
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>


	<update id="EvalSQL.modifyEvalPaper" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalPaper
						진단지 수정
		*/

		UPDATE TE_EVAL_PAPER
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="eval_seq	!= ''"> , EVAL_SEQ	= #{eval_seq}</if>
		<if test="orgno		!= ''"> , ORGNO		= #{orgno}</if>
		<if test="jobno		!= ''"> , JOBNO		= #{jobno}</if>
		<if test="up_seq	!= ''"> , UP_SEQ	= #{up_seq}</if>
		<if test="ppr_title	!= ''"> , PPR_TITLE	= #{ppr_title}</if>
		<if test="ppr_cont	!= ''"> , PPR_CONT	= #{ppr_cont}</if>
		<if test="ppr_idx	!= ''"> , PPR_IDX	= #{ppr_idx}</if>
		<if test="ppr_totpt	!= ''"> , PPR_TOTPT	= #{ppr_totpt}</if>
		<if test="que_count	!= ''"> , QUE_COUNT	= #{que_count}</if>
		<if test="ppr_opt	!= ''"> , PPR_OPT	= #{ppr_opt}</if>
		<if test="ppr_pcd	!= ''"> , PPR_PCD	= #{ppr_pcd}</if>
		<if test="ppr_tcd	!= ''"> , PPR_TCD	= #{ppr_tcd}</if>
		<if test="useyn		!= ''"> , USEYN		= #{useyn}</if>
		<if test="aspsid	!= ''"> , ASPSID	= #{aspsid}</if>
		<if test="svcsid	!= ''"> , SVCSID	= #{svcsid}</if>
		WHERE PPR_SEQ = #{ppr_seq}

	</update>

	<insert id="EvalSQL.appendEvalPaper" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalPaper
						진단지 등록
		*/
		INSERT INTO TE_EVAL_PAPER (
			PPR_SEQ, EVAL_SEQ, ORGNO,
			JOBNO, UP_SEQ, PPR_TITLE,
			PPR_CONT, PPR_IDX, PPR_TOTPT,
			QUE_COUNT, PPR_OPT, PPR_PCD,
			PPR_TCD, REGUID, MODUID,
			REGDTM, MODDTM, USEYN,
			ASPSID, SVCSID )
		VALUES
			( #{ppr_seq}
			, #{eval_seq}
			, #{orgno}
			, #{jobno}
			, #{up_seq}
			, #{ppr_title}
			, #{ppr_cont}
			, #{ppr_idx}
			, #{ppr_totpt}
			, #{que_count}
			, #{ppr_opt}
			, #{ppr_pcd}
			, #{ppr_tcd}
			, #{reguid}
			, #{moduid}
			, SYSDATE
			, SYSDATE
			, #{useyn}
			, #{aspsid}
			, #{svcsid} )

	</insert>

	<update id="EvalSQL.appendEvalPaperBatch" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalPaperBatch
						진단지 등록 배치
		*/
		INSERT INTO TE_EVAL_PAPER (
			PPR_SEQ, EVAL_SEQ, ORGNO,
			JOBNO, UP_SEQ, PPR_TITLE,
			PPR_CONT, PPR_IDX, PPR_TOTPT,
			QUE_COUNT, PPR_OPT, PPR_PCD,
			PPR_TCD, REGUID, MODUID,
			REGDTM, MODDTM, USEYN,
			ASPSID, SVCSID )
		SELECT #{ppr_seq}	AS PPR_SEQ 
			, #{eval_seq}   AS EVAL_SEQ
			, ORG.ORGNO
			, (SELECT J.JOBNO FROM TU_JOBTYPE J WHERE J.JOBNM = #{jobnm} AND J.USEYN = 'Y') AS JOBNO
			, #{up_seq}		AS UP_SEQ		
			, #{ppr_title}  AS PPR_TITLE
			, #{ppr_cont}   AS PPR_CONT 
			, #{ppr_idx}    AS PPR_IDX  
			, #{ppr_totpt}  AS PPR_TOTPT
			, #{que_count}  AS QUE_COUNT
			, #{ppr_opt}    AS PPR_OPT  
			, #{ppr_pcd}    AS PPR_PCD  
			, #{ppr_tcd}    AS PPR_TCD  
			, #{reguid}     AS REGUID   
			, #{moduid}     AS MODUID   
			, SYSDATE       AS REGDTM     
			, SYSDATE       AS MODDTM     
			, #{useyn}      AS USEYN    
			, #{aspsid}     AS ASPSID   
			, #{svcsid}     AS SVCSID   
		<![CDATA[
		FROM (
			SELECT O.ORGNO, SYS_CONNECT_BY_PATH(O.ORGNM, '|') || '|' AS PATHNM
			FROM TU_ORGAN O WHERE 1 = 1 AND O.ORG_LVL > 4 AND O.USEYN = 'Y'
			START WITH O.ORGNO = '10112971' CONNECT BY PRIOR O.ORGNO = O.UP_SEQ
		) ORG
		]]>
		WHERE ORG.PATHNM = '|제조/기술부문' || #{opath}
		
	</update>

	<delete id="EvalSQL.removeEvalPaper" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalPaper
						진단지 삭제
		*/
		DELETE FROM TE_EVAL_PAPER
		WHERE PPR_SEQ = #{ppr_seq}
		<if test="orgno != null and orgno != ''">
			AND ORGNO = #{orgno}
		</if>
		<if test="jobno != null and jobno != ''">
			AND JOBNO = #{jobno}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN = #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND ASPSID = #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID = #{svcsid}
		</if>
	</delete>

	<update id="EvalSQL.removeEvalPaperCmm" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalPaper
						공통 진단지 삭제
		*/
		UPDATE TE_EVAL_PAPER
		SET USEYN = 'N'
		WHERE PPR_PCD = #{ppr_pcd}
		<if test="aspsid != null and aspsid != ''">
			AND ASPSID = #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID = #{svcsid}
		</if>
		<if test="orgno != null and orgno != '' and ppr_pcd == 'JOB'">
			AND ORGNO = #{orgno}
		</if>
		<if test="jobno != null and jobno != '' and ppr_pcd == 'JOB'">
			AND JOBNO = #{jobno}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
			AND EVAL_SEQ = #{eval_seq}
		</if>
		<if test="up_seq != null and up_seq != ''">
			AND UP_SEQ = #{up_seq}
		</if>
		<if test="opath != null and opath != '' and ppr_pcd == 'JOB'">
			AND ORGNO IN (SELECT ORGNO FROM (
			SELECT O.ORGNO, SYS_CONNECT_BY_PATH(O.ORGNM, '|') || '|' AS PATHNM
			FROM TU_ORGAN O WHERE 1 = 1 AND O.ORG_LVL &gt; 4 AND O.USEYN = 'Y'
			START WITH O.ORGNO = '10112971' CONNECT BY PRIOR O.ORGNO = O.UP_SEQ
			) ORG WHERE PATHNM LIKE '%'||#{opath})
		</if>
		<if test="jobnm != null and jobnm != ''">
			AND JOBNO = (SELECT JOBNO FROM TU_JOBTYPE WHERE JOBNM = #{jobnm} AND USEYN = 'Y')
		</if>
	</update>


<!-- ====================================================================================== -->
<!--						배점기준 (TE_EVAL_SCORE)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalScore" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalScore
						배점기준 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('QUE_LVL', A.QUE_LVL, NULL) AS QUE_TNM
			, UFN_CODENM('QUE_PCD', A.QUE_PCD, NULL) AS QUE_PNM
		FROM TE_EVAL_SCORE A
		WHERE A.PPR_SEQ	= #{ppr_seq}
			AND A.PPR_PCD	= #{ppr_pcd}
			AND A.QUE_PCD	= #{que_pcd}
			AND A.QUE_LVL	= #{que_lvl}

	</select>

	<select id="EvalSQL.countEvalScore" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalScore
						배점기준 목록 카운트
		*/

		SELECT COUNT(A.PPR_SEQ)
		FROM TE_EVAL_SCORE A
		WHERE 1=1
			AND A.PPR_SEQ	= #{ppr_seq}
			AND A.USEYN	= 'Y'
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalScore" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalScore
						배점기준 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('PPR_PCD', AA.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('QUE_LVL', AA.QUE_LVL, NULL) AS QUE_TNM
			, UFN_CODENM('QUE_PCD', AA.QUE_PCD, NULL) AS QUE_PNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_SCORE A
			WHERE 1=1
				AND A.PPR_SEQ	= #{ppr_seq}
				AND A.USEYN	= 'Y'
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>


	<update id="EvalSQL.modifyEvalScore" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalScore
						배점기준 수정
		*/

		UPDATE TE_EVAL_SCORE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="ppr_seq	!= ''"> , PPR_SEQ		= #{ppr_seq}	</if>
		<if test="ppr_pcd	!= ''"> , PPR_PCD		= #{ppr_pcd}	</if>
		<if test="que_pcd	!= ''"> , QUE_PCD		= #{que_pcd}	</if>
		<if test="que_lvl	!= ''"> , QUE_LVL		= #{que_lvl}	</if>
		<if test="que_count	!= ''"> , QUE_COUNT		= #{que_count}	</if>
		<if test="que_score	!= ''"> , QUE_SCORE		= #{que_score}	</if>
		<if test="aspsid	!= ''"> , ASPSID		= #{aspsid}	</if>
		<if test="svcsid	!= ''"> , SVCSID		= #{svcsid}		</if>
		WHERE PPR_SEQ = #{ppr_seq}

	</update>

	<insert id="EvalSQL.appendEvalScore" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalScore
						배점기준 등록
		*/
		INSERT INTO TE_EVAL_SCORE (
		PPR_SEQ, PPR_PCD, QUE_PCD, QUE_LVL,
		QUE_COUNT, QUE_SCORE, MODUID,
		MODDTM, ASPSID, SVCSID)
		VALUES
		( #{ppr_seq}
	,#{ppr_pcd}
		,#{que_pcd}
		,#{que_lvl}
		,#{que_count}
		,#{que_score}
		,#{moduid}
		,SYSDATE
		,#{aspsid}
		,#{svcsid} )

	</insert>

	<delete id="EvalSQL.removeEvalScore" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalScore
						배점기준 삭제
		*/
		DELETE FROM TE_EVAL_SCORE
		WHERE PPR_SEQ = #{ppr_seq}
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID	= #{svcsid}
		</if>
	</delete>

<!-- ====================================================================================== -->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalSet" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalSet
						진단지문제출제 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
		FROM TE_EVAL_SET A
		WHERE A.SET_SEQ	= #{set_seq}
		<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD = #{ppr_pcd}
		</if>
	</select>

	<select id="EvalSQL.getoneEvalSetJoinQue" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalSetJoinQue
						진단지문제출제 정보 조회 SET_QUE
		*/

		SELECT B.*, A.QUE_IDX, A.SET_SEQ, A.RECOM_EDU
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
		FROM TE_EVAL_SET A,
			TE_EVAL_QUE B,
			TE_EVAL_PAPER C
		WHERE 1=1
			AND A.QUE_SEQ = B.QUE_SEQ
			AND A.PPR_SEQ = #{ppr_seq}
			AND A.PPR_SEQ = C.PPR_SEQ
			AND C.USEYN = 'Y'
		<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD = #{ppr_pcd}
		</if>
		<if test="up_seq != null and up_seq != ''">
				AND C.UP_SEQ = #{up_seq}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
				AND C.EVAL_SEQ = #{eval_seq}
		</if>

	</select>

	<select id="EvalSQL.dolistEvalSetQueResult" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.dolistEvalSetQueResult
						진단지문제출제 정보 조회 SET_QUE
		*/

		SELECT B.*, A.QUE_IDX, A.SET_SEQ, A.RECOM_EDU
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, L.JOBPT
			, L.REQPT
			, (CASE WHEN L.JOBPT &lt; L.REQPT THEN 'N' ELSE 'Y' END) AS PASSYN
			, NVL(A.RECOM_EDU, '-') AS RECOM_EDU
		FROM TE_EVAL_SET A,
			TE_EVAL_QUE B,
			TE_EVAL_PAPER C,
			(
				SELECT QUE.QUE_SEQ
					, NVL(ROUND(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 2), 0) AS JOBPT
					, NVL(ROUND(AVG(UFN_REQPOINT(LOG.PPR_PCD, LOG.PPR_SEQ, QUE.QUE_SEQ, USR.JLVL_PCD)) / 20, 2), 0) AS REQPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				INNER JOIN TE_EVAL_QUE QUE
					ON QUE.QUE_SEQ = LOG.QUE_SEQ
				WHERE 1 = 1
					AND MSE.USEYN = 'Y'
					AND EVL.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')
					AND MSE.EVEEUID = #{userno}
				GROUP BY MSE.EVAL_SEQ, MSE.EVEEUID, LOG.PPR_SEQ, LOG.PPR_PCD, QUE.QUE_SEQ
			) L
		WHERE 1=1
			AND A.QUE_SEQ = B.QUE_SEQ
			AND A.QUE_SEQ = L.QUE_SEQ
			AND A.PPR_SEQ = #{ppr_seq}
			AND A.PPR_SEQ = C.PPR_SEQ
			AND C.USEYN = 'Y'
		<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD = #{ppr_pcd}
		</if>
		<if test="up_seq != null and up_seq != ''">
				AND C.UP_SEQ = #{up_seq}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
				AND C.EVAL_SEQ = #{eval_seq}
		</if>
		ORDER BY A.QUE_IDX
	</select>

	<select id="EvalSQL.dolistExportJobPaper" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.dolistExportJobPaper
						직무 진단지 EXPORT 
		*/

		WITH TMP_ORGAN AS (
			SELECT O.ORGNO, O.UP_SEQ, O.ORGNM, O.ORG_LVL, O.ORG_IDX, O.ORG_SDAY, O.ORG_EDAY
				, SYS_CONNECT_BY_PATH(O.ORGNO, '|') || '|' AS PATHNO
				, REPLACE(SYS_CONNECT_BY_PATH(O.ORGNM, '|'), '|제조/기술부문|', '') AS PATHNM
			FROM TU_ORGAN O WHERE 1 = 1 AND O.ORG_LVL &gt; 4 AND O.USEYN = 'Y'
			START WITH O.ORGNO = '10112971' CONNECT BY PRIOR O.ORGNO = O.UP_SEQ
		)
		SELECT '기술사무직' AS EVAL_TNM, EVL.EVAL_SEQ, EVL.EVAL_YEAR, ORG.TORGNM, ORG.PATHNM
			, PPR.ORGNO, PPR.JOBNO, UFN_JOBNM(PPR.JOBNO) AS JOBNM, PPR.PPR_SEQ, PPR.PPR_PCD
			, EST.SET_SEQ, EST.QUE_IDX, EST.RECOM_EDU
			, QUE.QUE_TAG, QUE.QUE_TITLE, QUE.QUE_CONT
			, MAX(CASE WHEN ITM.ITEM_IDX = '1' THEN ITM.ITEM_TITLE END) AS L0
			, MAX(CASE WHEN ITM.ITEM_IDX = '2' THEN ITM.ITEM_TITLE END) AS L1
			, MAX(CASE WHEN ITM.ITEM_IDX = '3' THEN ITM.ITEM_TITLE END) AS L2
			, MAX(CASE WHEN ITM.ITEM_IDX = '4' THEN ITM.ITEM_TITLE END) AS L3
			, MAX(CASE WHEN ITM.ITEM_IDX = '5' THEN ITM.ITEM_TITLE END) AS L4
			, MAX(CASE WHEN ITM.ITEM_IDX = '6' THEN ITM.ITEM_TITLE END) AS L5
			, MAX(CASE WHEN LVL.CAPA_PCD = 'JOB' AND LVL.JLVL_PCD = 'L10' THEN LVL.REQ_LVL END) AS LVL_JOB1
			, MAX(CASE WHEN LVL.CAPA_PCD = 'JOB' AND LVL.JLVL_PCD = 'L20' THEN LVL.REQ_LVL END) AS LVL_JOB2
			, MAX(CASE WHEN LVL.CAPA_PCD = 'JOB' AND LVL.JLVL_PCD = 'L30' THEN LVL.REQ_LVL END) AS LVL_JOB3
			, MAX(CASE WHEN LVL.CAPA_PCD = 'JOB' AND LVL.JLVL_PCD = 'L40' THEN LVL.REQ_LVL END) AS LVL_JOB4
			, MAX(CASE WHEN LVL.CAPA_PCD = 'SPX' AND LVL.JLVL_PCD = 'L10' THEN LVL.REQ_LVL END) AS LVL_SPX1
			, MAX(CASE WHEN LVL.CAPA_PCD = 'SPX' AND LVL.JLVL_PCD = 'L20' THEN LVL.REQ_LVL END) AS LVL_SPX2
			, MAX(CASE WHEN LVL.CAPA_PCD = 'SPX' AND LVL.JLVL_PCD = 'L30' THEN LVL.REQ_LVL END) AS LVL_SPX3
			, MAX(CASE WHEN LVL.CAPA_PCD = 'SPX' AND LVL.JLVL_PCD = 'L40' THEN LVL.REQ_LVL END) AS LVL_SPX4
		FROM TE_EVAL EVL
		INNER JOIN (
			SELECT DISTINCT I.*, O.ORGNM AS TORGNM
				FROM TMP_ORGAN O, TMP_ORGAN I
				WHERE O.ORG_LVL = '5' AND I.PATHNM LIKE O.PATHNM || '%'
		) ORG ON ORG.ORGNO = EVL.ORGNO
		INNER JOIN TE_EVAL_PAPER PPR
			ON PPR.EVAL_SEQ = EVL.EVAL_SEQ AND PPR.ORGNO = EVL.ORGNO AND PPR.PPR_PCD = 'JOB' AND PPR.USEYN = 'Y'
		INNER JOIN TE_EVAL_SET EST
			ON EST.PPR_SEQ = PPR.PPR_SEQ AND EST.PPR_PCD = PPR.PPR_PCD AND EST.USEYN = 'Y'
		INNER JOIN TE_EVAL_REQLVL LVL
			ON LVL.SET_SEQ = EST.SET_SEQ AND LVL.PPR_PCD = EST.PPR_PCD
		INNER JOIN TE_EVAL_QUE QUE
			ON QUE.QUE_SEQ = EST.QUE_SEQ AND QUE.USEYN = 'Y'
		INNER JOIN TE_EVAL_QUEITEM ITM
			ON ITM.QUE_SEQ = QUE.QUE_SEQ
		WHERE EVL.EVAL_SEQ = #{eval_seq} 
		GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, ORG.TORGNM, ORG.PATHNM
			, PPR.ORGNO, PPR.JOBNO, PPR.PPR_SEQ, PPR.PPR_PCD
			, EST.SET_SEQ, EST.QUE_IDX, EST.RECOM_EDU
			, QUE.QUE_TAG, QUE.QUE_TITLE, QUE.QUE_CONT
		ORDER BY ORG.TORGNM, ORG.PATHNM, PPR.JOBNO, PPR.PPR_SEQ, PPR.PPR_PCD
			, EST.QUE_IDX, QUE.QUE_TAG, QUE.QUE_TITLE, QUE.QUE_CONT


	</select>


	<select id="EvalSQL.dolistEvalQueItem" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.dolistEvalQueItem
						진단지문제출제 정보 조회 SET_QUEITEM
		*/

		SELECT C.*
		FROM TE_EVAL_SET A,
			TE_EVAL_QUE B,
			TE_EVAL_QUEITEM C
		WHERE 1=1
			AND A.QUE_SEQ = B.QUE_SEQ
			AND A.PPR_SEQ = #{ppr_seq}
			AND A.QUE_SEQ = C.QUE_SEQ
		<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD = #{ppr_pcd}
		</if>

	</select>



	<select id="EvalSQL.countEvalSet" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalSet
						진단지문제출제 목록 카운트
		*/

		SELECT
			COUNT(A.SET_SEQ)
		FROM TE_EVAL_SET A
		WHERE 1=1
			AND A.USEYN	= 'Y'
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="que_seq != null and que_seq != ''">
			AND A.QUE_SEQ	= #{que_seq}
		</if>
		<if test="ppr_seq != null and ppr_seq != ''">
			AND A.PPR_SEQ	= #{ppr_seq}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND A.ASPSID	= #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>




	<update id="EvalSQL.modifyEvalSet" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalSet
						진단지문제출제 수정
		*/

		UPDATE TE_EVAL_SET
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="set_seq	!= ''"> , SET_SEQ	= #{set_seq}		</if>
		<if test="ppr_seq	!= ''"> , PPR_SEQ	= #{ppr_seq}		</if>
		<if test="ppr_pcd		!= ''"> , PPR_PCD	= #{ppr_pcd}		</if>
		<if test="que_seq	!= ''"> , QUE_SEQ	= #{que_seq}		</if>
		<if test="que_score	!= ''"> , QUE_SCORE	= #{que_score}		</if>
		<if test="que_idx	!= ''"> , QUE_IDX	= #{que_idx}		</if>
		<if test="set_tcd	!= ''"> , SET_TCD	= #{set_tcd}		</if>
		<if test="useyn		!= ''"> , USEYN		= #{useyn}			</if>
		<if test="aspsid	!= ''"> , ASPSID	= #{aspsid}			</if>
		<if test="svcsid		!= ''"> , SVCSID	= #{svcsid}			</if>
		<if test="recom_edu != null and recom_edu != ''">, RECOM_EDU	= #{recom_edu}</if>
		WHERE SET_SEQ = #{set_seq}

	</update>

	<insert id="EvalSQL.appendEvalSet" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalSet
						진단지문제출제 등록
		*/

		INSERT INTO TE_EVAL_SET (
		SET_SEQ, PPR_SEQ, PPR_PCD, QUE_SEQ,
		QUE_SCORE, QUE_IDX, SET_TCD, REGUID,
		MODUID, REGDTM, MODDTM, USEYN,
		ASPSID, SVCSID, RECOM_EDU)
		VALUES
		( #{set_seq}
		,#{ppr_seq}
		,#{ppr_pcd}
		,#{que_seq}
		,#{que_score}
		,#{que_idx}
		,#{set_tcd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid}
		,#{recom_edu} )
	</insert>

	<delete id="EvalSQL.removeEvalSet" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalSet
						진단지문제출제 삭제
		*/
		DELETE FROM TE_EVAL_SET
		WHERE SET_SEQ = #{set_seq}
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="que_seq != null and que_seq != ''">
			AND QUE_SEQ	= #{que_seq}
		</if>
		<if test="ppr_seq != null and ppr_seq != ''">
			AND PPR_SEQ	= #{ppr_seq}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN	= #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND ASPSID	= #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID	= #{svcsid}
		</if>
	</delete>


<!-- ====================================================================================== -->
<!--						요구역량수준 (TE_EVAL_REQLVL)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalReqlvl" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalReqlvl
						진단지문제출제 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('SET_PCD', A.SET_PCD, NULL) AS SET_PNM
			, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
		FROM TE_EVAL_REQLVL A
		WHERE A.SET_SEQ	= #{set_seq}
			AND A.CAPA_PCD	= #{capa_pcd}

	</select>

	<select id="EvalSQL.countEvalReqlvl" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalReqlvl
						진단지문제출제 목록 카운트
		*/

		SELECT
			COUNT(A.SET_SEQ)
		FROM TE_EVAL_REQLVL A
		WHERE 1=1
			AND A.SET_SEQ	= #{seq_seq}
			AND A.USEYN	= 'Y'
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalReqlvl" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalReqlvl
						진단지문제출제 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('PPR_PCD', AA.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('CAPA_PCD', AA.CAPA_PCD, NULL) AS CAPA_PNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_REQLVL A
			WHERE 1=1
				AND A.USEYN	= 'Y'	
			<if test="seq_seq != null and seq_seq != ''">
				AND A.SET_SEQ	= #{seq_seq}
			</if>
			<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="capa_pcd != null and capa_pcd != ''">
				AND A.CAPA_PCD	= #{capa_pcd}
			</if>
			<if test="useyn != null and useyn != ''">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="svcsid != null and svcsid != ''">
				AND A.SVCSID	= #{svcsid}
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>


	<select id="EvalSQL.dolistEvalReqlvlAll" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalReqlvlAll
						진단지문제출제 목록 조회
		*/

		SELECT
		A.*
		FROM TE_EVAL_REQLVL A
		WHERE 1=1
			AND A.SET_SEQ IN ( (
			SELECT SET_SEQ FROM TE_EVAL_SET
			WHERE 1=1
			<if test="ppr_seq != null and ppr_seq != ''">
				AND PPR_SEQ = #{ppr_seq}
			</if>
			<if test="ppr_pcd != null and ppr_pcd != ''">
				AND PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="capa_pcd != null and capa_pcd != ''">
				AND CAPA_PCD	= #{capa_pcd}
			</if>
		))
		AND A.PPR_PCD	= #{ppr_pcd}
	</select>


	<update id="EvalSQL.modifyEvalReqlvl" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalReqlvl
						진단지문제출제 수정
		*/

		UPDATE TE_EVAL_REQLVL
		SET MODDTM = SYSDATE, MODUID = #{moduid}
			<if test="note	!= ''"> , NOTE		= #{note}		</if>
			<if test="aspsid	!= ''"> , ASPSID		= #{aspsid}		</if>
			<if test="svcsid	!= ''"> , SVCSID		= #{svcsid}		</if>
			<if test="req_lvl	!= ''"> , REQ_LVL		= #{req_lvl}		</if>
		WHERE SET_SEQ		= #{set_seq}
			AND JLVL_PCD	= #{jlvl_pcd}
			AND PPR_PCD		= #{ppr_pcd}
			AND CAPA_PCD	= #{capa_pcd}

	</update>

	<insert id="EvalSQL.appendEvalReqlvl" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalReqlvl
						진단지문제출제 등록
		*/

			INSERT INTO TE_EVAL_REQLVL (
			SET_SEQ, PPR_PCD, CAPA_PCD, JLVL_PCD,
			REQ_LVL, NOTE, MODUID,
			MODDTM, ASPSID, SVCSID)
			VALUES
			( #{set_seq}
			,#{ppr_pcd}
			,#{capa_pcd}
			,#{jlvl_pcd}
			,#{req_lvl}
			,#{note}
			,#{moduid}
			,SYSDATE
			,#{aspsid}
			,#{svcsid} )

	</insert>

	<delete id="EvalSQL.removeEvalReqlvl" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalReqlvl
						진단지문제출제 삭제
		*/
		DELETE FROM TE_EVAL_REQLVL
		WHERE SET_SEQ = #{set_seq}
		<if test="seq_seq != null and seq_seq != ''">
			AND SET_SEQ	= #{seq_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="capa_pcd != null and capa_pcd != ''">
			AND CAPA_PCD	= #{capa_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN		= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID		= #{svcsid}
		</if>
	</delete>


<!-- ====================================================================================== -->
<!--						진단문제 (TE_EVAL_QUE)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalQue" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalQue
						진단문제 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('QUE_PCD', A.QUE_PCD, NULL) AS QUE_PNM
			, UFN_CODENM('QUE_TCD', A.QUE_TCD, NULL) AS QUE_TNM
		FROM TE_EVAL_QUE A
		WHERE A.QUE_SEQ	= #{que_seq}

	</select>

	<select id="EvalSQL.countEvalQue" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalQue
						진단문제 목록 카운트
		*/

		SELECT
			COUNT(A.QUE_SEQ)
		FROM TE_EVAL_QUE A
		WHERE 1=1
		AND A.USEYN	= 'Y'
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO		= #{orgno}
		</if>
		<if test="jobno != null and jobno != ''">
			AND A.JOBNO		= #{jobno}
		</if>
		<if test="ctgr_seq != null and ctgr_seq != ''">
			AND A.CTGR_SEQ	= #{ctgr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD		= #{ppr_pcd}
		</if>
		<if test="asps_id != null and asps_id != ''">
			AND A.ASPSID		= #{asps_id}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN		= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID		= #{svcsid}
		</if>

	</select>


	<select id="EvalSQL.dolistEvalQue" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalQue
						진단문제 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('QUE_PCD', AA.QUE_PCD, NULL) AS QUE_PNM
			, UFN_CODENM('QUE_TCD', AA.QUE_TCD, NULL) AS QUE_TNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_QUE A
			WHERE 1=1
				AND A.USEYN	= 'Y'
			<if test="orgno != null and orgno != ''">
				AND A.ORGNO		= #{orgno}
			</if>
			<if test="jobno != null and jobno != ''">
				AND A.JOBNO		= #{jobno}
			</if>
			<if test="ctgr_seq != null and ctgr_seq != ''">
				AND A.CTGR_SEQ	= #{ctgr_seq}
			</if>
			<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD		= #{ppr_pcd}
			</if>
			<if test="asps_id != null and asps_id != ''">
				AND A.ASPSID		= #{asps_id}
			</if>
			<if test="useyn != null and useyn != ''">
				AND A.USEYN		= #{useyn}
			</if>
			<if test="svcsid != null and svcsid != ''">
				AND A.SVCSID		= #{svcsid}
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}

	</select>


	<update id="EvalSQL.modifyEvalQue" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalQue
						진단문제 수정
		*/

		UPDATE TE_EVAL_QUE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="que_seq	!= ''"> , QUE_SEQ	= #{que_seq} </if>
		<if test="ppr_pcd	!= ''"> , PPR_PCD		= #{ppr_pcd} </if>
		<if test="ctgr_seq	!= ''"> , CTGR_SEQ	= #{ctgr_seq} </if>
		<if test="que_title	!= ''"> , QUE_TITLE	= #{que_title} </if>
		<if test="que_cont	!= ''"> , QUE_CONT	= #{que_cont} </if>
		<if test="que_expn	!= ''"> , QUE_EXPN	= #{que_expn} </if>
		<if test="que_tag	!= ''"> , QUE_TAG	= #{que_tag} </if>
		<if test="que_lvl	!= ''"> , QUE_LVL	= #{que_lvl} </if>
		<if test="ans_correct	!= ''"> , ANS_CORRECT	= #{ans_correct}</if>
		<if test="ans_similar	!= ''"> , ANS_SIMILAR	= #{ans_similar}</if>
		<if test="item_cnt	!= ''"> , ITEM_CNT		= #{item_cnt} </if>
		<if test="batidx	!= ''"> , BATIDX		= #{batidx} </if>
		<if test="bas_score	!= ''"> , BAS_SCORE		= #{bas_score} </if>
		<if test="que_opt	!= ''"> , QUE_OPT		= #{que_opt} </if>
		<if test="que_pcd	!= ''"> , QUE_PCD		= #{que_pcd} </if>
		<if test="que_tcd	!= ''"> , QUE_TCD		= #{que_tcd} </if>
		<if test="useyn	!= ''"> , USEYN		= #{useyn} </if>
		<if test="aspsid	!= ''"> , ASPSID		= #{aspsid} </if>
		<if test="svcsid				!= ''"> , SVCSID			= #{svcsid}		</if>
		WHERE QUE_SEQ = #{que_seq}
	</update>

	<update id="EvalSQL.modifyEvalQueUse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalQueUse
						진단문제 수정
		*/

		UPDATE TE_EVAL_QUE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		, USEYN		= 'N'

		WHERE QUE_SEQ = (
			SELECT QUE_SEQ FROM TE_EVAL_QUE
			WHERE PPR_PCD = #{ppr_pcd}
		)
	</update>



	<insert id="EvalSQL.appendEvalQue" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalQue
						진단문제 등록
						ORGNO, JOBNO,
		*/

		INSERT INTO TE_EVAL_QUE (
		QUE_SEQ, PPR_PCD,
		CTGR_SEQ, QUE_TITLE, QUE_CONT,
		QUE_EXPN, QUE_TAG, QUE_LVL,
		ANS_CORRECT, ANS_SIMILAR, ITEM_CNT,
		BATIDX, BAS_SCORE, QUE_OPT,
		QUE_PCD, QUE_TCD, REGUID,
		MODUID, REGDTM, MODDTM,
		USEYN, ASPSID, SVCSID)
		VALUES
		( #{que_seq}
		,#{ppr_pcd}
		,#{ctgr_seq}
		,#{que_title}
		,#{que_cont}
		,#{que_expn}
		,#{que_tag}
		,#{que_lvl}
		,#{ans_correct}
		,#{ans_similar}
		,#{item_cnt}
		,#{batidx}
		,#{bas_score}
		,#{que_opt}
		,#{que_pcd}
		,#{que_tcd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid}
		)
	</insert>

	<delete id="EvalSQL.removeEvalQue" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalQue
						진단문제 삭제
		*/
		DELETE FROM TE_EVAL_QUE
		WHERE QUE_SEQ = #{que_seq}
			AND A.USEYN	= 'Y'
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO		= #{orgno}
		</if>
		<if test="jobno != null and jobno != ''">
			AND A.JOBNO		= #{jobno}
		</if>
		<if test="ctgr_seq != null and ctgr_seq != ''">
			AND A.CTGR_SEQ	= #{ctgr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD		= #{ppr_pcd}
		</if>
		<if test="asps_id != null and asps_id != ''">
			AND A.ASPSID		= #{asps_id}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN		= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID		= #{svcsid}
		</if>
	</delete>



<!-- ====================================================================================== -->
<!--						진단문제카테고리 (TE_EVAL_QUECTGR)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalQuectgr" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalQuectgr
						진단문제카테고리 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('CTGR_TCD', A.CTGR_TCD, NULL) AS CTGR_TNM
		FROM TE_EVAL_QUECTGR A
		WHERE A.CTGR_SEQ	= #{ctgr_seq}

	</select>

	<select id="EvalSQL.countEvalQuectgr" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalQuectgr
						진단문제카테고리 목록 카운트
		*/

		SELECT
			COUNT(A.CTGR_SEQ)
		FROM TE_EVAL_QUECTGR A
		WHERE 1=1
			AND A.USEYN	= 'Y'
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="asps_id != null and asps_id != ''">
			AND A.ASPSID		= #{asps_id}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalQuectgr" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalQuectgr
						진단문제카테고리 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('PPR_PCD', AA.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('CTGR_TCD', AA.CTGR_TCD, NULL) AS CTGR_TNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_QUECTGR A
			WHERE 1=1
				AND A.USEYN	= 'Y'
			<if test="ppr_pcd != null and ppr_pcd != ''">
				AND A.PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="useyn != null and useyn != ''">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="svcsid != null and svcsid != ''">
				AND A.SVCSID	= #{svcsid}
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>


	<update id="EvalSQL.modifyEvalQuectgr" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalQuectgr
						진단문제카테고리 수정
		*/

		UPDATE TE_EVAL_QUECTGR
		SET MODDTM = SYSDATE, MODUID = #{userno}
			<if test="ctgr_seq	!= ''"> , CTGR_SEQ	= #{ctgr_seq}		</if>
			<if test="ppr_pcd	!= ''"> , PPR_PCD		= #{ppr_pcd}		</if>
			<if test="up_seq	!= ''"> , UP_SEQ	= #{up_seq}		</if>
			<if test="ctgrnm	!= ''"> , CTGRNM		= #{ctgrnm}		</if>
			<if test="ctgr_lvl	!= ''"> , CTGR_LVL	= #{ctgr_lvl}		</if>
			<if test="ctgr_idx	!= ''"> , CTGR_IDX	= #{ctgr_idx}		</if>
			<if test="ctgr_cmmt	!= ''"> , CTGR_CMMT	= #{ctgr_cmmt}	</if>
			<if test="ctgr_pcd	!= ''"> , CTGR_PCD	= #{ctgr_pcd}		</if>
			<if test="ctgr_tcd	!= ''"> , CTGR_TCD	= #{ctgr_tcd}		</if>
			<if test="moduid	!= ''"> , MODUID		= #{moduid}		</if>
			<if test="useyn	!= ''"> , USEYN			= #{useyn}		</if>
			<if test="aspsid	!= ''"> , ASPSID	= #{aspsid}		</if>
			<if test="svcsid	!= ''"> , SVCSID		= #{svcsid}		</if>

		WHERE CTGR_SEQ = #{ctgr_seq}

	</update>

	<insert id="EvalSQL.appendEvalQuectgr" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalQuectgr
						진단문제카테고리 등록
		*/

			INSERT INTO TE_EVAL_QUECTGR (
			CTGR_SEQ, PPR_PCD, UP_SEQ, CTGRNM,
			CTGR_LVL, CTGR_IDX, CTGR_CMMT,
			CTGR_PCD, CTGR_TCD, MODUID,
			MODDTM, USEYN, ASPSID,
			SVCSID)
			VALUES
			( #{ctgr_seq}
			,#{ppr_pcd}
			,#{up_seq}
			,#{ctgrnm}
			,#{ctgr_lvl}
			,#{ctgr_idx}
			,#{ctgr_cmmt}
			,#{ctgr_pcd}
			,#{ctgr_tcd}
			,#{moduid}
			,SYSDATE
			,#{useyn}
			,#{aspsid}
			,#{svcsid} )

	</insert>

	<delete id="EvalSQL.removeEvalQuectgr" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalQuectgr
						진단문제카테고리 삭제
		*/
		DELETE FROM TE_EVAL_QUECTGR
		WHERE CTGR_SEQ	= #{ctgr_seq}
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD		= #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN		= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID		= #{svcsid}
		</if>
	</delete>


<!-- ====================================================================================== -->
<!--						진단문제항목 (TE_EVAL_QUEITEM)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalQueitem" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalQueitem
						진단문제항목 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('ITEM_PCD', A.ITEM_PCD, NULL) AS ITEM_PNM
			, UFN_CODENM('ITEM_TCD', A.ITEM_TCD, NULL) AS ITEM_TNM
		FROM TE_EVAL_QUEITEM A
		WHERE A.ITEM_SEQ	= #{item_seq}
		ORDER BY A.ITEM_IDX DESC
	</select>

	<select id="EvalSQL.countEvalQueitem" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalQueitem
						진단문제항목 목록 카운트
		*/

		SELECT
			COUNT(A.ITEM_SEQ)
		FROM TE_EVAL_QUEITEM A
		WHERE 1=1
			AND A.USEYN	= 'Y'
		<if test="que_seq != null and que_seq != ''">
			AND A.QUE_SEQ = #{que_seq}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND A.ASPSID	= #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>

	<update id="EvalSQL.modifyEvalQueitem" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalQueitem
						진단문제항목 수정
		*/

		UPDATE TE_EVAL_QUEITEM
		SET MODDTM = SYSDATE, MODUID = #{moduid}
			<if test="set_seq		!= ''"> , SET_SEQ		= #{set_seq}	</if>
			<if test="que_seq		!= ''"> , QUE_SEQ		= #{que_seq}	</if>
			<if test="item_idx		!= ''"> , ITEM_IDX		= #{item_idx}	</if>
			<if test="item_title	!= ''"> , ITEM_TITLE	= #{item_title}	</if>
			<if test="correct_yn	!= ''"> , CORRECT_YN	= #{correct_yn}	</if>
			<if test="item_pcd		!= ''"> , ITEM_PCD		= #{item_pcd}	</if>
			<if test="item_tcd		!= ''"> , ITEM_TCD		= #{item_tcd}	</if>
			<if test="aspsid		!= ''"> , ASPSID		= #{aspsid}		</if>
			<if test="svcsid		!= ''"> , SVCSID		= #{svcsid}		</if>

		WHERE ITEM_SEQ = #{item_seq}

	</update>

	<insert id="EvalSQL.appendEvalQueitem" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalQueitem
						진단문제항목 등록
		*/

			INSERT INTO TE_EVAL_QUEITEM (
			ITEM_SEQ, QUE_SEQ, ITEM_IDX,
			ITEM_TITLE, CORRECT_YN, ITEM_TCD, ITEM_PCD,
			REGUID, MODUID, REGDTM,
			MODDTM, ASPSID, SVCSID)
			VALUES
			( #{item_seq}
			,#{que_seq}
			,#{item_idx}
			,#{item_title}
			,#{correct_yn}
			,#{item_tcd}
			,#{item_pcd}
			,#{reguid}
			,#{moduid}
			,SYSDATE
			,SYSDATE
			,#{aspsid}
			,#{svcsid} )

	</insert>

	<delete id="EvalSQL.removeEvalQueitem" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalQueitem
						진단문제항목 삭제
		*/
		DELETE FROM TE_EVAL_QUEITEM
		WHERE ITEM_SEQ	= #{item_seq}
		<if test="que_seq != null and que_seq != ''">
			AND QUE_SEQ = #{que_seq}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN	= #{useyn}
		</if>
		<if test="aspsid != null and aspsid != ''">
			AND ASPSID	= #{aspsid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID	= #{svcsid}
		</if>
	</delete>

<!-- ====================================================================================== -->
<!--						다면평가관계 (TE_EVAL_MSE)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalMse" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalMse
						다면평가관계 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('MSE_PCD', A.MSE_PCD, NULL) AS MSE_PNM
			, UFN_CODENM('MSE_TCD', A.MSE_TCD, NULL) AS MSE_TNM
			, UFN_CODENM('MSE_SCD', A.MSE_SCD, NULL) AS MSE_SNM
		FROM TE_EVAL_MSE A
		WHERE A.MSE_SEQ = #{mse_seq}
	</select>

	<select id="EvalSQL.countEvalMse" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalMse
						예외자 및 위임자 목록 카운트
		*/

		SELECT COUNT(1)
		FROM TC_USER_ROLE A, TU_MEMBER B
		WHERE 1=1
			AND A.USERNO	= B.USERNO
			AND A.USERNO	= #{userno}
			AND B.JLVL_PCD LIKE 'L%'
		<if test="rolecd != null and rolecd != ''">
			AND A.ROLECD	= #{rolecd}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
			AND A.EVAL_SEQ	= #{eval_seq}
		</if>
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO	= #{orgno}
		</if>
		<if test="eveeuid != null and eveeuid != ''">
			AND A.EVEEUID	= #{eveeuid}
		</if>
		<if test="evoruid != null and evoruid != ''">
			AND A.EVORUID	= #{evoruid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalMse" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalMse
						다면평가관계 목록 조회
		*/
		SELECT AA.*
			, (CASE WHEN AA.ROLECD = 'EX' THEN UFN_USERNM(AA.ROLEUID) ELSE '-' END) AS EX_USER
			, (CASE WHEN AA.ROLECD != 'EX' THEN UFN_USERNM(AA.ROLEUID) ELSE '-' END) AS ROLEUNM
/*			, (SELECT COUNT(1) FROM TC_USER_ROLE R WHERE R.ORGNO = AA.ORGNO AND R.ROLECD = AA.ROLECD AND R.ROLEUID = AA.USERNO) AS CT_ROLEUID */
		FROM (
			SELECT	A.*
				, UFN_CODENM('EVAL_PCD', A.EVAL_PCD, NULL) AS EVAL_PNM
				, UFN_CODENM('EVAL_TCD', A.EVAL_TCD, NULL) AS EVAL_TNM
				, UFN_CODENM('MRK_TCD', A.MRK_TCD, NULL) AS MRK_TNM
				, UFN_CODENM('SET_TCD', A.SET_TCD, NULL) AS SET_TNM
				, UFN_CODENM('JROL_PCD', B.JROL_PCD, NULL) AS JROL_PNM
				, UFN_CODENM('JLVL_PCD', B.JLVL_PCD, NULL) AS JLVL_PNM
				, UFN_ORGNM(A.ORGNO) AS ORGNM
				, B.USERNO
				, B.USERID
				, B.USERNM
				, B.USER_PCD
				, B.JLVL_PCD
				, B.BELONG
				, NVL(C.NOTE, '-' ) AS NOTE
				, C.USERROLE_SEQ
				, NVL(C.ROLECD, 'PL') AS ROLECD
				, (CASE WHEN C.ROLECD = 'TA' THEN C.ROLEUID
					ELSE (SELECT MAX(M.USERNO) FROM TU_MEMBER M
							WHERE M.ORGNO = A.ORGNO AND M.USER_PCD = 'PL') END
				) AS ROLEUID
/*
				, NVL(UFN_USERNM((SELECT R.ROLEUID FROM TC_USER_ROLE R WHERE B.ORGNO = R.ORGNO AND B.USERNO = R.USERNO AND R.ROLECD = 'EX')), '-') AS EX_USER
				, NVL(UFN_USERNM((SELECT R.ROLEUID FROM TC_USER_ROLE R WHERE B.ORGNO = R.ORGNO AND B.USERNO = R.USERNO AND R.ROLECD = 'TA')),
						(SELECT M.USERNM FROM TU_MEMBER M WHERE M.ORGNO = A.ORGNO AND M.USER_PCD = 'PL')) AS ROLEUID
				, (SELECT COUNT(R.USERNO) FROM TC_USER_ROLE R WHERE B.ORGNO = R.ORGNO AND R.ROLECD = 'TA' AND R.ROLEUID = B.USERNO) AS CT_ROLEUID
				, (SELECT B.USERNM FROM TC_USER_ROLE R WHERE B.USERNO = C.USERNO AND C.ROLECD = 'PL') AS M_EVORUID
*/
			FROM TE_EVAL A
			INNER JOIN TE_EVAL_MNG T ON A.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
			LEFT OUTER JOIN TU_MEMBER B
				ON A.ORGNO = B.ORGNO AND B.JLVL_PCD LIKE 'L%'
			LEFT OUTER JOIN TC_USER_ROLE C
				ON B.USERNO = C.USERNO AND A.ORGNO = C.ORGNO AND A.EVAL_SEQ = C.EVAL_SEQ
			WHERE 1=1

				AND B.USER_PCD	!= 'SA'
<!--			AND B.USERNO	!= #{userno} -->
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND A.ORGNO		= #{orgno}
			</if>
			<if test="eval_seq != null and eval_seq != ''">
				AND A.EVAL_SEQ	= #{eval_seq}
			</if>
			<if test="eveeuid != null and eveeuid != ''">
				AND A.EVEEUID	= #{eveeuid}
			</if>
			<if test="evoruid != null and evoruid != ''">
				AND A.EVORUID	= #{evoruid}
			</if>
			<if test="useyn != null and useyn != ''">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="svcsid != null and svcsid != ''">
				AND A.SVCSID	= #{svcsid}
			</if>
			<if test="course != null and course !=''">
				AND C.NOTE	like '%${course}%'
			</if>
		) AA
		ORDER BY DECODE(ROLECD, 'PL', 1, 'TA', 2, 3), ROLEUID ASC, JLVL_PCD DESC, USERNM ASC
	</select>

	<select id="EvalSQL.dolistMand" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistMand
						다면평가 위임자 리스트
		*/
		SELECT
			B.USERNO
			, B.USERNM
			, UFN_CODENM('JROL_PCD', B.JROL_PCD, NULL) AS JROL_PNM
			, UFN_CODENM('JLVL_PCD', B.JLVL_PCD, NULL) AS JLVL_PNM
			, UFN_CODENM('USER_SCD', B.USER_SCD, NULL) AS USER_SNM
			, UFN_ORGNM(B.ORGNO) AS ORGNM
			, B.JROL_PCD
			, B.JLVL_PCD
			, (SELECT COUNT(C.USERNO) FROM TC_USER_ROLE C 
				WHERE B.ORGNO = C.ORGNO AND C.ROLECD = 'TA' AND C.ROLEUID = B.USERNO AND A.EVAL_SEQ = C.EVAL_SEQ) AS CT_ROLEUID
			, (CASE WHEN C.ROLECD = 'TA' THEN C.ROLEUID
					ELSE (SELECT MAX(B.USERNO) FROM TU_MEMBER B
							WHERE B.ORGNO = A.ORGNO AND B.USER_PCD = 'PL') END
				) AS ROLEUID
		FROM TE_EVAL A
		INNER JOIN TE_EVAL_MNG T ON A.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
		LEFT OUTER JOIN TU_MEMBER B
		ON A.ORGNO = B.ORGNO AND B.JLVL_PCD LIKE 'L%'
		LEFT OUTER JOIN TC_USER_ROLE C
		ON B.USERNO = C.USERNO AND A.ORGNO = C.ORGNO AND A.EVAL_SEQ = C.EVAL_SEQ
		WHERE 1=1
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(searchvalues)">
			<if test="course == '사번/성명'">
				AND B.USERNO like '%${searchvalues}%' OR B.USERNM like '%${searchvalues}%'
			</if>
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(searchvalues)">
			<if test="course == '직급'">
				AND UFN_CODENM('JLVL_PCD', B.JLVL_PCD, NULL) like '%${searchvalues}%'
			</if>
		</if>
		<if test="orgno != null and orgno !=''">
			AND B.ORGNO = #{orgno}
		</if>
		<if test="userno != null and userno !=''">
			AND B.USERNO != #{userno}
		</if>

		ORDER BY ROLEUID ASC, B.JLVL_PCD DESC, B.USERNM ASC
	</select>

	<select id="EvalSQL.dolistMandSet" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistMandSet
						다면평가 진단자 리스트(검색)
		*/
		SELECT
			B.USERNO
			,B.USERNM
			,UFN_CODENM('JLVL_PCD', B.JLVL_PCD, NULL) AS JLVL_PNM
			,UFN_CODENM('JROL_PCD', B.JROL_PCD, NULL) AS JROL_PNM
			,UFN_CODENM('USER_SCD', B.USER_SCD, NULL) AS USER_SNM
			,UFN_ORGNM(B.ORGNO) AS ORGNM
			,B.BELONG
			,B.JROL_PCD
			,B.JLVL_PCD
			,(SELECT COUNT(1) FROM TE_EVAL_MSE D WHERE D.ORGNO = B.ORGNO AND D.MSE_PCD != 'O' AND D.EVORUID = B.USERNO) AS CT_ROLEUID
			, (CASE WHEN C.ROLECD = 'TA' THEN C.ROLEUID
					ELSE (SELECT MAX(B.USERNO) FROM TU_MEMBER B
							WHERE B.ORGNO = A.ORGNO AND B.USER_PCD = 'PL') END
				) AS ROLEUID
		FROM TE_EVAL A
		INNER JOIN TE_EVAL_MNG T ON A.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
		LEFT OUTER JOIN TU_MEMBER B
			ON A.ORGNO = B.ORGNO AND B.JLVL_PCD LIKE 'L%'
		LEFT OUTER JOIN TC_USER_ROLE C
			ON B.USERNO = C.USERNO AND A.ORGNO = C.ORGNO AND A.EVAL_SEQ = C.EVAL_SEQ
		WHERE 1=1
			AND B.USER_PCD != 'SA'
			AND A.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY')
		<if test="searchJlvl != null and searchJlvl !=''">
			AND UFN_CODENM('JLVL_PCD', B.JLVL_PCD, NULL) like '%${searchJlvl}%'
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isEmpty(searchorg)">
			AND B.ORGNO		= #{orgno}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(searchorg)">
			AND UFN_ORGNM(B.ORGNO) like '%${searchorg}%'
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(searchnano)">
			AND B.USERNO like '%${searchnano}%' OR B.USERNM LIKE '%${searchnano}%'
		</if>
		ORDER BY ROLEUID ASC, B.JLVL_PCD DESC, B.USERNM ASC
	</select>

	<select id="EvalSQL.dolistConfirm" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistConfirm
						다면평가 확정 리스트
		*/
		SELECT AA.*
			, UFN_USERNM(AA.ROLE_USERID) AS ROLEUID
			, (SELECT M.EMAIL FROM TU_MEMBER M WHERE M.USERNO = AA.ROLE_USERID) AS ROLE_MAIL
			, UFN_ORGNM(AA.ORGNO) AS ORGNM
			, UFN_CODENM('JROL_PCD', AA.JROL_PCD, NULL) AS JROL_PNM
			, UFN_CODENM('JLVL_PCD', AA.JLVL_PCD, NULL) AS JLVL_PNM
		FROM (
			SELECT DISTINCT C.USERNO
				, C.USERNM
				, C.EMAIL
				, C.ORGNO
				, C.JROL_PCD
				, C.JLVL_PCD
				, NVL(B.ROLECD, 'PL') AS ROLECD
				, (CASE WHEN B.ROLECD = 'TA' THEN B.ROLEUID
					ELSE (SELECT MAX(M.USERNO) FROM TU_MEMBER M
							WHERE M.ORGNO = A.ORGNO AND M.USER_PCD = 'PL') END
				) AS ROLE_USERID
/*				, NVL(UFN_USERNM((SELECT B.ROLEUID FROM TC_USER_ROLE B WHERE B.ORGNO = C.ORGNO AND B.USERNO = C.USERNO AND B.ROLECD = 'TA')), (SELECT B.USERNM FROM TU_MEMBER B WHERE	B.ORGNO = A.ORGNO AND B.USER_PCD = 'PL')) AS ROLEUID */
				, NVL(UFN_USERNM((SELECT B.ROLEUID FROM TC_USER_ROLE B WHERE B.ORGNO = C.ORGNO AND B.USERNO = C.USERNO AND A.EVAL_SEQ = B.EVAL_SEQ AND B.ROLECD = 'TA')), (SELECT B.USERNM FROM TU_MEMBER B WHERE	B.ORGNO = A.ORGNO AND B.USER_PCD = 'PL')) AS EUID
				, NVL(UFN_USERNM((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD = 'P' AND D.EVEEUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ)), '-') AS MSE_PARTNER
				, NVL(UFN_USERNM((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD = 'D' AND D.EVEEUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ)), '-') AS MSE_SUCCESSOR
				, NVL(UFN_USERNM((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD = 'O' AND D.EVEEUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ)), '-') AS MSE_OWN
				,(SELECT COUNT(1) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD != 'O' AND D.EVORUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ) AS CT_ROLEUID
				, (SELECT COUNT(1) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD = 'P' AND D.EVEEUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ) AS PART_CT
				, (SELECT COUNT(1) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.MSE_PCD = 'D' AND D.EVEEUID = C.USERNO AND D.EVAL_SEQ = A.EVAL_SEQ) AS DOWN_CT
				, D.MSE_SEQ
			FROM TE_EVAL A
			INNER JOIN TE_EVAL_MNG T ON A.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
			LEFT OUTER JOIN TU_MEMBER C ON A.ORGNO = C.ORGNO AND C.JLVL_PCD LIKE 'L%'
			LEFT OUTER JOIN TC_USER_ROLE B ON A.ORGNO = B.ORGNO AND B.USERNO = C.USERNO AND A.EVAL_SEQ = B.EVAL_SEQ
			LEFT OUTER JOIN (
				SELECT D.* FROM TE_EVAL_MSE D, TE_EVAL_APPLY E
				WHERE D.MSE_SEQ = E.MSE_SEQ AND E.PPR_PCD = 'JOB'
			) D ON SUBSTR(C.JROL_PCD,0 ,1) = D.MSE_PCD AND A.EVAL_SEQ = D.EVAL_SEQ AND D.ORGNO = A.ORGNO AND C.USERNO = D.EVEEUID
			WHERE 1=1
				AND C.USER_PCD != 'SA'
			<if test="selectedelms != null and selectedelms != ''" >
				AND C.ORGNO IN
				<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND C.ORGNO	= #{orgno}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(useyn)">
				AND B.USEYN		= #{useyn}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND A.SVCSID	= #{svcsid}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
				AND A.EVAL_YEAR	= #{eval_year}
			</if>
			<!-- <if test="@org.apache.commons.lang.StringUtils@isNotEmpty(userno)">
				AND C.USERNO	!= #{userno}
			</if> -->
		) AA
		WHERE 1 = 1
		<if test="rolecd != 'SA' and rolecd != 'SB'">
			AND ROLE_USERID= #{userno}
		</if>

		ORDER BY ORGNO, DECODE(ROLE_USERID, #{userno}, 0, DECODE(ROLECD, 'PL', 1, 'TA', 2, 3)), ROLE_USERID ASC, JLVL_PCD DESC, USERNM ASC
	</select>

	<select id="EvalSQL.dolistMseUsers" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistMseUsers (dolistConfirm)
						다면 진단자 구성 리스트
		*/
		SELECT AA.*
			, UFN_USERNM(AA.T_ID) AS T_NM
			, (SELECT COUNT(1) FROM TE_EVAL_MSE D WHERE D.EVAL_SEQ = AA.EVAL_SEQ AND D.EVORUID = AA.USERNO AND D.MSE_PCD != 'O') AS EVOR_CNT
			, BB.EVAL_SDAY, BB.EVAL_EDAY, BB.EVAL_ODAY
		FROM (
			SELECT EVL.EVAL_SEQ, EVL.ORGNO, EVL.EVAL_YEAR
				, USR.USERNO, USR.USERNM, USR.JROL_PCD, USR.JLVL_PCD
				, NVL(ROL.ROLECD, 'PL') AS ROLECD
				, UFN_ORGNM(EVL.ORGNO) AS ORGNM
				, UFN_CODENM('JROL_PCD', USR.JROL_PCD, NULL) AS JROL_PNM
				, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
				, MAX(DECODE(MSE.MSE_PCD, 'O', MSE.EVORUID)) AS O_ID
				, MAX(DECODE(MSE.MSE_PCD, 'U', MSE.EVORUID)) AS U_ID
				, MAX(DECODE(MSE.MSE_PCD, 'P', MSE.EVORUID)) AS P_ID
				, MAX(DECODE(MSE.MSE_PCD, 'D', MSE.EVORUID)) AS D_ID
				, NVL(UFN_USERNM(MAX(DECODE(MSE.MSE_PCD, 'O', MSE.EVORUID))), '-') AS O_NM
				, NVL(UFN_USERNM(MAX(DECODE(MSE.MSE_PCD, 'U', MSE.EVORUID))), '-') AS U_NM
				, NVL(UFN_USERNM(MAX(DECODE(MSE.MSE_PCD, 'P', MSE.EVORUID))), '-') AS P_NM
				, NVL(UFN_USERNM(MAX(DECODE(MSE.MSE_PCD, 'D', MSE.EVORUID))), '-') AS D_NM
				, DECODE(ROL.ROLECD, 'TA', ROL.ROLEUID,
					(SELECT MAX(M.USERNO) FROM TU_MEMBER M WHERE M.ORGNO = EVL.ORGNO AND M.USER_PCD = 'PL')) AS T_ID
			FROM TE_EVAL EVL
			INNER JOIN TE_EVAL_MNG T ON EVL.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
			INNER JOIN TU_MEMBER USR
				ON USR.ORGNO = EVL.ORGNO AND USR.JLVL_PCD LIKE 'L%' AND USR.USEYN = 'Y'
			LEFT OUTER JOIN TC_USER_ROLE ROL 
				ON ROL.ORGNO = USR.ORGNO AND ROL.USERNO = USR.USERNO AND ROL.EVAL_SEQ = EVL.EVAL_SEQ
			LEFT OUTER JOIN TE_EVAL_MSE MSE
				ON MSE.EVAL_SEQ = EVL.EVAL_SEQ AND MSE.ORGNO = EVL.ORGNO AND MSE.EVEEUID = USR.USERNO
			WHERE 1 = 1
				AND EVL.EVAL_YEAR	= NVL(#{eval_year}, TO_CHAR(SYSDATE, 'YYYY'))			
			<if test="searchorg == '' and searchnano == '' and searchjlvl == '' and orgno != ''">
				AND EVL.ORGNO	= #{orgno}
			</if>
			<if test="orgno == '' and selectedelms != ''" >
				AND EVL.ORGNO IN <foreach collection="selectedelms" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
			
			<if test="searchjlvl != ''">
				AND USR.JLVL_PCD = '#{searchJlvl}'
			</if>
			<if test="searchorg != ''">
				AND UFN_ORGNM(USR.ORGNO) LIKE '%${searchorg}%'
			</if>
			<if test="searchnano != ''">
				AND (USR.USERNO LIKE '%${searchnano}%' OR USR.USERNM LIKE '%${searchnano}%')
			</if>
			GROUP BY EVL.EVAL_SEQ, EVL.ORGNO, EVL.EVAL_YEAR, USR.USERNO, USR.USERNM, USR.JROL_PCD, USR.JLVL_PCD, ROL.ROLECD, ROL.ROLEUID
		) AA, TE_EVAL BB
		WHERE AA.EVAL_SEQ = BB.EVAL_SEQ AND AA.ORGNO = BB.ORGNO
		<if test="rolecd != 'SA' and rolecd != 'SB' and searchorg == '' and searchnano == '' and searchjlvl == ''">
			AND T_ID = #{userno}
		</if>
		ORDER BY AA.ORGNO, DECODE(T_ID, #{userno}, 0, DECODE(ROLECD, 'PL', 1, 'TA', 2, 3)), T_ID ASC, JLVL_PCD DESC, USERNM ASC
	</select>

	<select id="EvalSQL.countMseUsers" resultType="int">
		/*
			SQL ID : EvalSQL.countMseUsers
						위임자 등록시 카운트
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_MSE A
		WHERE 1=1
			AND A.EVEEUID	= #{eveeuid}
			AND A.MSE_PCD	= #{mse_pcd}
			AND A.EVAL_SEQ	= #{eval_seq}
	</select>

	<insert id="EvalSQL.appendMseUsers" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendMseUsers
						진단자 설정 등록
		*/

		INSERT INTO TE_EVAL_MSE (
			MSE_SEQ, EVAL_SEQ, ORGNO,
			EVEEUID, EVORUID, MSE_OPT,
			MSE_PCD, MSE_TCD, MSE_SCD,
			REGUID, MODUID, REGDTM,
			MODDTM, USEYN, ASPSID,
			SVCSID
		) 
		VALUES
		( #{mse_seq}
		, #{eval_seq}
		, (SELECT M.ORGNO FROM TU_MEMBER M WHERE M.USERNO = #{eveeuid})
		, #{eveeuid}
		, #{evoruid}
		, #{mse_opt}
		, #{mse_pcd}
		, #{mse_tcd}
		, #{mse_scd}
		, #{reguid}
		, #{moduid}
		, SYSDATE
		, SYSDATE
		, #{useyn}
		, #{aspsid}
		, #{svcsid} )
	</insert>

	<update id="modifyMseUsers" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyMseUsers
						다면 진단자 설정 변경
		*/
		UPDATE TE_EVAL_MSE 
		SET MODDTM = SYSDATE, MODUID = #{moduid}
			, ORGNO = (SELECT M.ORGNO FROM TU_MEMBER M WHERE M.USERNO = #{eveeuid})
		<if test="eveeuid != ''">, EVORUID = #{evoruid}</if>
		WHERE USEYN = 'Y'
			AND	MSE_SEQ = (
				SELECT MAX(A.MSE_SEQ) FROM TE_EVAL_MSE A 
				WHERE A.EVEEUID = #{eveeuid} 
					AND A.MSE_PCD = #{mse_pcd} 
					AND A.EVAL_SEQ = #{eval_seq}
			)
	</update>


	<select id="EvalSQL.userMngPopDP" resultType="DataMap">
			SELECT DISTINCT
				C.USERNO
				, C.USERNM
				, UFN_ORGNM(A.ORGNO) AS ORGNM
				, UFN_CODENM('JROL_PCD', C.JROL_PCD, NULL) AS JROL_PNM
				, UFN_CODENM('JLVL_PCD', C.JLVL_PCD, NULL) AS JLVL_PNM
				, NVL((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.EVAL_SEQ = A.EVAL_SEQ AND D.MSE_PCD = 'P' AND D.EVEEUID = C.USERNO ), '-') AS MSE_PARTNER_ID
				, NVL(UFN_USERNM((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.EVAL_SEQ = A.EVAL_SEQ AND D.MSE_PCD = 'P' AND D.EVEEUID = C.USERNO )), '-') AS MSE_PARTNER
				, NVL((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.EVAL_SEQ = A.EVAL_SEQ AND D.MSE_PCD = 'D' AND D.EVEEUID = C.USERNO ), '-') AS MSE_SUCCESSOR_ID
				, NVL(UFN_USERNM((SELECT MAX(D.EVORUID) FROM TE_EVAL_MSE D WHERE D.ORGNO = C.ORGNO AND D.EVAL_SEQ = A.EVAL_SEQ AND D.MSE_PCD = 'D' AND D.EVEEUID = C.USERNO )), '-') AS MSE_SUCCESSOR
			FROM TE_EVAL A
			INNER JOIN TE_EVAL_MNG T ON EVL.EVAL_SEQ = T.EVAL_SEQ AND T.USEYN = 'Y'
			LEFT OUTER JOIN TU_MEMBER C
			ON A.ORGNO = C.ORGNO AND C.JLVL_PCD LIKE 'L%'
			LEFT OUTER JOIN TE_EVAL_MSE D
			ON SUBSTR(C.JROL_PCD,0 ,1) = D.MSE_PCD
			WHERE 1=1
				AND C.USER_PCD != 'SA'
				AND A.EVAL_YEAR = #{eval_year}
				AND C.USERNO IN
				<foreach collection="userno" item="rolerow" index="idx" open="(" separator="," close=")">
					#{rolerow}
				</foreach>
	</select>
	
	
	<select id="EvalSQL.dolistSetApply" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistSetApply
						진단 평가 Set 설정 현황리스트
		*/
		SELECT AA.*
			, UFN_USERNM(AA.ROLE_USERID) AS ROLEUID
			, UFN_ORGNM(AA.ORGNO) AS ORGNM
			, UFN_CODENM('JROL_PCD', AA.JROL_PCD, NULL) AS JROL_PNM
			, UFN_CODENM('JLVL_PCD', AA.JLVL_PCD, NULL) AS JLVL_PNM
		FROM (
			SELECT A.USERNO
				, A.USERNM
				, A.ORGNO
				, A.EMAIL
				, A.JROL_PCD
				, A.JLVL_PCD
				, NVL(C.ROLECD, 'PL') AS ROLECD
				, NVL(B.EVEEUID, '-') AS EVEEUID
				, (CASE WHEN C.ROLECD = 'TA' THEN C.ROLEUID
					ELSE (SELECT MAX(M.USERNO) FROM TU_MEMBER M
							WHERE M.ORGNO = A.ORGNO AND M.USER_PCD = 'PL') END
				) AS ROLE_USERID
			FROM TU_MEMBER A
				LEFT JOIN (
					SELECT DISTINCT A.EVAL_SEQ, A.ORGNO, A.EVEEUID
					FROM TE_EVAL_MSE A, TE_EVAL_APPLY B, TE_EVAL_PAPER C, TE_EVAL_MNG E
					WHERE A.MSE_SEQ	= B.MSE_SEQ
						AND C.EVAL_SEQ	= E.EVAL_SEQ
						AND A.ORGNO = C.ORGNO
						AND B.PPR_SEQ	= C.PPR_SEQ
						AND C.USEYN = 'Y'
						AND E.USEYN = 'Y'
						AND E.EVAL_YEAR = #{eval_year}
				) B ON A.USERNO = B.EVEEUID
				LEFT OUTER JOIN TC_USER_ROLE C
				ON C.ORGNO = A.ORGNO AND C.USERNO = A.USERNO AND B.EVAL_SEQ = C.EVAL_SEQ

			WHERE 1 = 1
				AND A.JLVL_PCD LIKE 'L%'
			<if test="selectedelms != null and selectedelms != ''" >
				AND A.ORGNO IN
				<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
				AND A.ORGNO	= #{orgno}
			</if>
		) AA
		WHERE 1 = 1
		<if test="rolecd != 'SA' and rolecd != 'SB'">
			AND ROLE_USERID= #{userno}
		</if>

		ORDER BY ORGNO, DECODE(ROLECD, 'PL', 1, 'TA', 2, 3), ROLE_USERID ASC, JLVL_PCD DESC, USERNM ASC
	</select>
	<select id="EvalSQL.dolistSelMse" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistSelMse
						다면평가 위임자 선택
		*/
			SELECT
				A.*
				, UFN_CODENM('USER_PCD', A.USER_PCD, NULL) AS USER_PNM
				, UFN_ORGNM(A.ORGNO) AS ORGNM
				, UFN_CODENM('JROL_PCD', A.JROL_PCD, NULL) AS JROL_PNM
				, UFN_CODENM('JLVL_PCD', A.JLVL_PCD, NULL) AS JLVL_PNM
				, A.JLVL_PCD
				, UFN_USERNM(NVL(
					(SELECT DISTINCT X.ROLEUID FROM TC_USER_ROLE X WHERE X.ROLECD ='TA' AND X.USERNO = A.USERNO
						AND X.EVAL_SEQ = (SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})),
					(SELECT MAX(Y.USERID) FROM TU_MEMBER Y WHERE Y.ORGNO = A.ORGNO AND Y.USER_PCD = 'PL')
				)) AS ROLEUID
			FROM TU_MEMBER A
			WHERE 1=1
				AND A.JLVL_PCD LIKE 'L%'
			<if test="user_list != null and user_list != ''">
			AND A.USERNO IN
		<foreach collection="user_list" item="rolerow" index="idx" open="(" separator="," close=")">
			#{rolerow}
		</foreach>
			</if>
			ORDER BY A.JLVL_PCD DESC
	</select>

	<insert id="EvalSQL.appendException" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendException
						진단 예외자 등록
		*/

		INSERT INTO TC_USER_ROLE (
		USERROLE_SEQ, EVAL_SEQ,
		ORGNO, USERNO, ROLECD,
		NOTE, ROLEREL_IDX, ROLEREL_OPT,
		REGUID, MODUID, REGDTM, MODDTM,
		CLOSDAY, USEYN, ASPSID, SVCSID, ROLEUID)
		VALUES
		( #{userrole_seq}
		,(SELECT A.EVAL_SEQ FROM TE_EVAL_MNG A WHERE A.USEYN = 'Y' AND A.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY'))
		,#{orgno}
		,#{userno}
		,#{rolecd}
		,#{course}
		,#{rolerel_idx}
		,#{rolerel_opt}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,NULL
		,#{useyn}
		,#{aspsid}
		,#{svcsid}
		,#{roleuid}	)
	</insert>

	<select id="EvalSQL.countMandator" resultType="int">
		/*
			SQL ID : EvalSQL.countMandator
						위임자 등록시 카운트
		*/

		SELECT COUNT(1)
		FROM TC_USER_ROLE A, TU_MEMBER B
		WHERE 1=1
			AND A.USERNO	= B.USERNO
			AND B.JLVL_PCD LIKE 'L%'
			AND A.USERNO	= #{userno}
		<if test="rolecd != null and rolecd != ''">
			AND A.ROLECD	= #{rolecd}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
			AND A.EVAL_SEQ	= #{eval_seq}
		</if>
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO	= #{orgno}
		</if>
		<if test="eveeuid != null and eveeuid != ''">
			AND A.EVEEUID	= #{eveeuid}
		</if>
		<if test="evoruid != null and evoruid != ''">
			AND A.EVORUID	= #{evoruid}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>

	<insert id="EvalSQL.appendMandator" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendMandator
						위임자 등록
		*/

		INSERT INTO TC_USER_ROLE (
		USERROLE_SEQ, EVAL_SEQ,
		ORGNO, USERNO, ROLECD,
		NOTE, ROLEREL_IDX, ROLEREL_OPT,
		REGUID, MODUID, REGDTM, MODDTM,
		CLOSDAY, USEYN, ASPSID, SVCSID, ROLEUID)
		VALUES
		( #{userrole_seq}
		,(SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = TO_CHAR(SYSDATE, 'YYYY'))
		,#{orgno}
		,#{user_list}
		,#{rolecd}
		,#{course}
		,#{rolerel_idx}
		,#{rolerel_opt}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,NULL
		,#{useyn}
		,#{aspsid}
		,#{svcsid}
		,#{roleuid}	)
	</insert>

	<insert id="EvalSQL.userAppendMand" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.userAppendMand
						진단자 동료,후임 등록
		*/

		INSERT INTO TE_EVAL_MSE (
		MSE_SEQ, EVAL_SEQ, ORGNO,
		EVEEUID, EVORUID, MSE_OPT,
		MSE_PCD, MSE_TCD, MSE_SCD,
		REGUID, MODUID, REGDTM,
		MODDTM, USEYN, ASPSID,
		SVCSID)
		VALUES
		( #{mse_seq}
		,(SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})
		,#{orgno}
		,#{eveeuid}
		,#{evoruid}
		,#{mse_opt}
		,#{mse_pcd}
		,#{mse_tcd}
		,#{mse_scd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid} )
	</insert>

	<insert id="EvalSQL.userAppendBoss" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.userAppendBoss
						진단자 상사 등록
		*/

		INSERT INTO TE_EVAL_MSE (
		MSE_SEQ, EVAL_SEQ, ORGNO,
		EVEEUID, EVORUID, MSE_OPT,
		MSE_PCD, MSE_TCD, MSE_SCD,
		REGUID, MODUID, REGDTM,
		MODDTM, USEYN, ASPSID,
		SVCSID)
		VALUES
		( #{mse_seq}
		,(SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})
		,#{orgno}
		,#{eveeuid}
		,NVL(
			(SELECT DISTINCT A.ROLEUID FROM TC_USER_ROLE A WHERE A.ROLECD ='TA' AND A.USERNO IN #{eveeuid}
				AND A.EVAL_SEQ = (SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})),
			(SELECT MAX(B.USERID) FROM TU_MEMBER B WHERE B.ORGNO = #{orgno} AND B.USER_PCD = 'PL')
		)
		,#{mse_opt}
		,#{mse_pcd}
		,#{mse_tcd}
		,#{mse_scd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid} )
	</insert>

	<insert id="EvalSQL.userAppendOwn" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.userAppendOwn
						진단평가시 본인 평가 등록
		*/

		INSERT INTO TE_EVAL_MSE (
		MSE_SEQ, EVAL_SEQ, ORGNO,
		EVEEUID, EVORUID, MSE_OPT,
		MSE_PCD, MSE_TCD, MSE_SCD,
		REGUID, MODUID, REGDTM,
		MODDTM, USEYN, ASPSID,
		SVCSID)
		VALUES
		( #{mse_seq}
		,(SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})
		,#{orgno}
		,#{eveeuid}
		,#{evoruid}
		,#{mse_opt}
		,#{mse_pcd}
		,#{mse_tcd}
		,#{mse_scd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid} )
	</insert>

	<select id="EvalSQL.countSetMand" resultType="int">
		/*
			SQL ID : EvalSQL.countSetMand
						위임자 등록시 카운트
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_MSE A
		WHERE 1=1
			AND A.EVEEUID	IN #{user_list}
			AND A.MSE_PCD	= #{mse_pcd}
	</select>

	<select id="EvalSQL.countOwnMand" resultType="int">
		/*
			SQL ID : EvalSQL.countOwnMand
						다면 진단자 구성시 본인 지정(MSE_PCD == 'O')
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_MSE A
		WHERE 1=1
			AND A.EVEEUID	IN #{user_list}
			AND A.EVORUID	IN #{user_list}
			AND A.MSE_PCD	= #{mse_pcd}
	</select>

	<select id="EvalSQL.countBossMand" resultType="int">
		/*
			SQL ID : EvalSQL.countBossMand
						다면 진단자 구성시 상사 지정(MSE_PCD == 'U')
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_MSE A, TE_EVAL_MNG B
		WHERE 1=1
			AND A.EVAL_SEQ = B.EVAL_SEQ
			AND B.USEYN = 'Y'
			AND B.EVAL_YEAR = #{eval_year}
			AND A.EVEEUID = #{user_list}
			AND A.MSE_PCD	= #{mse_pcd}
	</select>

	<update id="EvalSQL.modifyMandMse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyMandMse
						다면 진단자 구성 변경(동료,후임)
		*/

		UPDATE TE_EVAL_MSE SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="eveeuid != ''"> , EVORUID = #{evoruid}		</if>
		WHERE		USEYN	= 'Y'
			AND	MSE_SEQ = (SELECT MSE_SEQ FROM TE_EVAL_MSE A, TE_EVAL_MNG E WHERE A.EVEEUID = #{eveeuid} AND A.MSE_PCD = #{mse_pcd}
								AND E.EVAL_SEQ = A.EVAL_SEQ AND E.EVAL_YEAR = #{eval_year} AND E.USEYN = 'Y')
	</update>

	<update id="EvalSQL.modifyOwnMse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyOwnMse
						다면 진단자 구성 변경(본인)
		*/

		UPDATE TE_EVAL_MSE SET MODDTM = SYSDATE, MODUID = #{moduid}
		WHERE		USEYN	= 'Y'
			AND	MSE_SEQ = (SELECT MSE_SEQ FROM TE_EVAL_MSE A, TE_EVAL_MNG E WHERE A.EVEEUID = #{eveeuid} AND A.EVORUID = #{evoruid} AND A.MSE_PCD = #{mse_pcd}
								AND E.EVAL_SEQ = A.EVAL_SEQ AND E.EVAL_YEAR = #{eval_year} AND E.USEYN = 'Y')
	</update>

	<update id="EvalSQL.modifyBossMse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyBossMse
						다면 진단자 구성 변경(상사)
		*/

		UPDATE TE_EVAL_MSE SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="eveeuid != ''">
			, EVORUID = NVL(
					(SELECT DISTINCT A.ROLEUID FROM TC_USER_ROLE A WHERE A.ROLECD ='TA' AND A.USERNO IN #{eveeuid}
						AND A.EVAL_SEQ = (SELECT MAX(E.EVAL_SEQ) FROM TE_EVAL_MNG E WHERE E.USEYN = 'Y' AND E.EVAL_YEAR = #{eval_year})),
					(SELECT MAX(B.USERID) FROM TU_MEMBER B WHERE B.ORGNO = #{orgno} AND B.USER_PCD = 'PL')
				)
		</if>
		WHERE		USEYN	= 'Y'
			AND	MSE_SEQ = (SELECT MSE_SEQ FROM TE_EVAL_MSE, TE_EVAL_MNG E WHERE A.EVEEUID = #{eveeuid} AND A.MSE_PCD = #{mse_pcd}
								AND E.EVAL_SEQ = A.EVAL_SEQ AND E.EVAL_YEAR = #{eval_year} AND E.USEYN = 'Y')
	</update>

	<delete id="EvalSQL.userDelEx" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.userDelEx
						예외 처리 삭제
		*/
		DELETE FROM TC_USER_ROLE
		WHERE USERROLE_SEQ = #{userrole_seq}
		<if test="eval_seq != null and eval_seq != ''">
			AND A.EVAL_SEQ	= #{eval_seq}
		</if>
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO	= #{orgno}
		</if>
		<if test="eveeuid != null and eveeuid != ''">
			AND A.EVEEUID	= #{eveeuid}
		</if>
		<if test="evoruid != null and evoruid != ''">
			AND A.EVORUID	= #{evoruid}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</delete>

	<update id="EvalSQL.userPopConfirmOk" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.userPopConfirmOk
						위임자 확정 상태값 업데이트
		*/

		UPDATE TC_USER_ROLE
			SET MODDTM = SYSDATE, MODUID = #{moduid}, USEYN = 'Y'
		WHERE USEYN = 'I'
	</update>

	<update id="EvalSQL.modifyException" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyException
						진단 예외자 수정
		*/

		UPDATE TC_USER_ROLE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="rolerel_opt	!= ''"> , ROLEREL_OPT	= #{rolerel_opt}	</if>
		<if test="useyn			!= ''"> , USEYN		= #{useyn}		</if>
		<if test="roleuid		!= ''"> , ROLEUID		= #{roleuid}		</if>
		<if test="rolecd		!= ''"> , ROLECD		= #{rolecd}		</if>
		<if test="course		!= ''"> , NOTE		= #{course}		</if>
		WHERE USERNO = #{userno}
	</update>

	<update id="EvalSQL.modifyMandator" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyMandator
						위임자 수정
		*/

		UPDATE TC_USER_ROLE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="rolerel_opt		!= ''"> , ROLEREL_OPT	= #{rolerel_opt}	</if>
		<if test="useyn			!= ''"> , USEYN		= #{useyn}		</if>
		<if test="roleuid		!= ''"> , ROLEUID		= #{roleuid}		</if>
		<if test="rolecd			!= ''"> , ROLECD		= #{rolecd}		</if>
		<if test="course			!= ''"> , NOTE		= #{course}		</if>
		WHERE USERNO = #{userno}

	</update>

	<update id="EvalSQL.modifyEvalMse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalMse
						다면평가관계 수정
		*/

		UPDATE TE_EVAL_MSE
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="mse_seq	!= ''"> , MSE_SEQ	= #{mse_seq} </if>
		<if test="eval_seq	!= ''"> , EVAL_SEQ	= #{eval_seq}</if>
		<if test="orgno	!= ''"> , ORGNO	= #{orgno} </if>
		<if test="eveeuid	!= ''"> , EVEEUID	= #{eveeuid} </if>
		<if test="evoruid	!= ''"> , EVORUID	= #{evoruid} </if>
		<if test="mse_opt	!= ''"> , MSE_OPT	= #{mse_opt} </if>
		<if test="mse_pcd	!= ''"> , MSE_PCD	= #{mse_pcd} </if>
		<if test="mse_tcd	!= ''"> , MSE_TCD	= #{mse_tcd} </if>
		<if test="mse_scd	!= ''"> , MSE_SCD	= #{mse_scd} </if>
		<if test="useyn	!= ''"> , USEYN	= #{useyn} </if>
		<if test="aspsid	!= ''"> , ASPSID	= #{aspsid} </if>
		<if test="svcsid	!= ''"> , SVCSID	= #{svcsid} </if>
		WHERE MSE_SEQ = #{mse_seq}

	</update>

	<insert id="EvalSQL.appendEvalMse" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalMse
						다면평가관계 등록
		*/

		INSERT INTO TE_EVAL_MSE (
		MSE_SEQ, EVAL_SEQ, ORGNO,
		EVEEUID, EVORUID, MSE_OPT,
		MSE_PCD, MSE_TCD, MSE_SCD,
		REGUID, MODUID, REGDTM,
		MODDTM, USEYN, ASPSID,
		SVCSID)
		VALUES
		( #{mse_seq}
		,#{eval_seq}
		,#{orgno}
		,#{eveeuid}
		,#{evoruid}
		,#{mse_opt}
		,#{mse_pcd}
		,#{mse_tcd}
		,#{mse_scd}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{useyn}
		,#{aspsid}
		,#{svcsid} )
	</insert>






	<select id="EvalSQL.selectLastNode" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID : EvalSQL.selectLastNode
			트리에서 마지막 노드만 가져오기
		*/

			SELECT ORGNO FROM (
				SELECT
					A.*,
					(SELECT COUNT(1) FROM TU_ORGAN B WHERE B.UP_SEQ = A.ORGNO) CNT
				FROM TU_ORGAN A
				WHERE A.ORGNO IN
				<foreach collection="tree" index="index" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			) B
			WHERE B.CNT = 0
	</select>


	<delete id="EvalSQL.removeEvalMse" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalMse
						다면평가관계 삭제
		*/
		DELETE FROM TE_EVAL_MSE A
		WHERE 1 = 1
		<if test="mse_seq != null and mse_seq != ''">
			AND A.MSE_SEQ = #{mse_seq}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
			AND A.EVAL_SEQ	= #{eval_seq}
		</if>
		<if test="orgno != null and orgno != ''">
			AND A.ORGNO	= #{orgno}
		</if>
		<if test="eveeuid != null and eveeuid != ''">
			AND A.EVEEUID	= #{eveeuid}
		</if>
		<if test="evoruid != null and evoruid != ''">
			AND A.EVORUID	= #{evoruid}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</delete>


<!-- ====================================================================================== -->
<!--						진단응시 (TE_EVAL_APPLY)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalApply" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalApply
						진단문제 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
			, UFN_CODENM('APL_TCD', A.APL_TCD, NULL) AS APL_TNM
			, UFN_CODENM('APL_SCD', A.APL_SCD, NULL) AS APL_SNM
		FROM TE_EVAL_APPLY A
		WHERE A.MSE_SEQ = #{mse_seq}
			AND A.PPR_SEQ = #{ppr_seq}
			AND A.PPR_PCD = #{ppr_pcd}
	</select>

	<select id="EvalSQL.getoneEvalApplyMse" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalApplyMse
						피평가자 진단SET 정보 조회
		*/

		SELECT MSE.EVAL_SEQ, MSE.ORGNO, MSE.EVEEUID
			, MAX(CASE WHEN APL.PPR_PCD = 'CMM' THEN APL.PPR_SEQ END) AS CMM
			, MAX(CASE WHEN APL.PPR_PCD = 'JOB' THEN APL.PPR_SEQ END) AS JOB
		FROM TE_EVAL_MSE MSE, TE_EVAL_APPLY APL
		WHERE APL.MSE_SEQ = MSE.MSE_SEQ
			AND MSE.EVAL_SEQ = #{eval_seq}
			AND MSE.EVEEUID = #{userid}  
		GROUP BY MSE.EVAL_SEQ, MSE.ORGNO, MSE.EVEEUID
	</select>

	<select id="EvalSQL.countEvalApply" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalApply
						진단문제 목록 카운트
		*/

		SELECT COUNT(1) AS CNT
		FROM TE_EVAL_APPLY A, TE_EVAL B, TE_EVAL_PAPER C, TE_EVAL_MSE D
		WHERE 1=1
			AND D.MSE_SEQ = A.MSE_SEQ
			AND D.EVEEUID = #{userid}
			AND B.EVAL_SEQ = C.EVAL_SEQ
			AND A.PPR_SEQ = C.PPR_SEQ
			AND A.USEYN	= 'Y'
		<if test="mse_seq != null and mse_seq != ''">
			AND A.MSE_SEQ = #{mse_seq}
		</if>
		<if test="ppr_seq != null and ppr_seq != ''">
			AND A.PPR_SEQ = #{ppr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD = #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN = #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID = #{svcsid}
		</if>
		<if test="date != null and date != ''">
			<![CDATA[
			AND B.EVAL_SDAY <= TO_CHAR(SYSDATE, 'YYYYMMDD')
			]]>
		</if>
		<if test="orgno != null and orgno != ''">
			AND B.ORGNO = #{orgno}
		</if>
		<if test="eval_year != null and eval_year != ''">
			AND B.EVAL_YEAR = #{eval_year}
		</if>
		<if test="eval_seq != null and eval_seq != ''">
			AND B.EVAL_SEQ = #{eval_seq}
		</if>
		AND A.APL_SCD != 'P'
	</select>


	<select id="EvalSQL.dolistEvalApply" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalApply
						진단문제 목록 조회
		*/
		<![CDATA[
		SELECT A.*, UFN_USERNM(A.ROLE_USERID) AS ROLEUNM FROM (
			SELECT
				A.USERNM, A.ORGNO, D.PPR_SEQ AS CMM_PPR_SEQ, E.PPR_SEQ AS JOB_PPR_SEQ,
				A.USER_PCD, A.JROL_PCD, A.JLVL_PCD, A.USER_TCD, A.STAFFNO , C.EVAL_ODAY, B.MSE_SEQ,
				C.EVAL_SDAY, C.EVAL_EDAY,
				UFN_CODENM('JROL_PCD', A.JROL_PCD, NULL) AS JROL_PCDNM,
				UFN_CODENM('JLVL_PCD', A.JLVL_PCD, NULL) AS JLVL_PNM,
				UFN_USERNM((SELECT T.EVORUID FROM TE_EVAL_MSE T WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'U' AND B.EVAL_SEQ = T.EVAL_SEQ) ) AS UPPERNM,
				UFN_CODENM('APL_SCD', D.APL_SCD, NULL) AS CMM_APL_SNM,
				UFN_CODENM('APL_SCD', E.APL_SCD, NULL) AS JOB_APL_SNM,
				CASE WHEN (C.EVAL_SDAY <= TO_CHAR(SYSDATE, 'YYYYMMDD')) THEN
					CASE WHEN (C.EVAL_EDAY < TO_CHAR(SYSDATE, 'YYYYMMDD')) THEN
					'C'
					ELSE
					'Y'
					END
				ELSE
					'N'
				END AS ISOPEN,
				D.APL_SCD AS CMM_APL_SCD,
				E.APL_SCD AS JOB_APL_SCD,
				F.PPR_TITLE ,
				F.JOBNO,
				D.PPR_PCD AS CMM_PPR_PCD,
				E.PPR_PCD AS JOB_PPR_PCD,
				UFN_JOBNM(F.JOBNO) AS JOBNM,
				UFN_ORGNM(F.ORGNO) AS ORGNM,

				NVL(R.ROLECD, 'PL') AS ROLECD,
				(CASE WHEN R.ROLECD = 'TA' THEN R.ROLEUID
					ELSE (SELECT MAX(M.USERNO) FROM TU_MEMBER M
							WHERE M.ORGNO = B.ORGNO AND M.USER_PCD = 'PL') END
				) AS ROLE_USERID
			FROM TU_MEMBER A, TE_EVAL C, TE_EVAL_MSE B
			LEFT JOIN TE_EVAL_APPLY D
			ON D.USEYN	= 'Y' AND B.MSE_SEQ = D.MSE_SEQ AND D.PPR_PCD = 'CMM'

			LEFT JOIN TE_EVAL_APPLY E
			ON E.USEYN	= 'Y' AND B.MSE_SEQ = E.MSE_SEQ AND E.PPR_PCD = 'JOB'

			LEFT JOIN TE_EVAL_PAPER F
			ON E.PPR_SEQ = F.PPR_SEQ

			LEFT OUTER JOIN TC_USER_ROLE R
			ON B.ORGNO = R.ORGNO AND R.USERNO = B.EVEEUID AND R.EVAL_SEQ = B.EVAL_SEQ
			WHERE 1=1
				AND B.EVEEUID = A.USERID
				AND F.EVAL_SEQ = C.EVAL_SEQ
				AND A.ORGNO = C.ORGNO
				AND B.USEYN	= 'Y'
				AND A.USEYN	= 'Y'
				AND C.EVAL_ODAY <= TO_CHAR(SYSDATE, 'YYYYMMDD')
				AND D.PPR_SEQ IS NOT NULL AND E.PPR_SEQ IS NOT NULL
				AND A.JLVL_PCD LIKE 'L%'
		]]>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
					AND C.EVAL_SEQ = #{eval_seq}
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
					AND C.EVAL_YEAR = #{eval_year}
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgnm)">
					AND C.ORGNO IN ((SELECT ORGNO FROM TU_ORGAN WHERE ORGNM LIKE '%'||#{orgnm}||'%'))
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(evoruid)">
					AND B.EVORUID = #{evoruid}
					<if test="@org.apache.commons.lang.StringUtils@isEmpty(eveeuid)">
					AND B.EVEEUID != #{evoruid}
					</if>
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eveeuid)">
					AND B.EVEEUID = #{eveeuid}
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(mse_seq)">
					AND B.MSE_SEQ = #{mse_seq}
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
					AND A.SVCSID = #{svcsid}
				</if>
		) A
		WHERE CMM_PPR_SEQ IS NOT NULL AND JOB_PPR_SEQ IS NOT NULL
		ORDER BY A.ORGNO ASC, A.JLVL_PCD DESC, A.USERNM ASC

	</select>



	<select id="EvalSQL.doCountAllEvalApply" resultType="int">
		/*
			SQL ID : EvalSQL.doCountAllEvalApply
		*/

		<![CDATA[
		SELECT COUNT(1) FROM (
			SELECT
				A.USERNM, A.ORGNO, D.PPR_SEQ AS CMM_PPR_SEQ, E.PPR_SEQ AS JOB_PPR_SEQ,
				A.USER_PCD, A.JROL_PCD, A.USER_TCD, A.STAFFNO , C.EVAL_ODAY, B.MSE_SEQ,
				D.APL_SCD AS CMM_APL_SCD,
				E.APL_SCD AS JOB_APL_SCD
			FROM TU_MEMBER A, TE_EVAL C, TE_EVAL_MSE B
			LEFT JOIN TE_EVAL_APPLY D
			ON D.USEYN	= 'Y' AND B.MSE_SEQ = D.MSE_SEQ AND D.PPR_PCD = 'CMM'
			LEFT JOIN TE_EVAL_APPLY E
			ON E.USEYN	= 'Y' AND B.MSE_SEQ = E.MSE_SEQ AND E.PPR_PCD = 'JOB'
			LEFT JOIN TE_EVAL_PAPER F
			ON E.PPR_SEQ = F.PPR_SEQ
			WHERE 1=1
				AND B.EVEEUID = A.USERID
				AND B.EVAL_SEQ = C.EVAL_SEQ
				AND A.ORGNO = C.ORGNO
				AND B.USEYN	= 'Y'
				AND A.USEYN	= 'Y'
				AND A.JLVL_PCD LIKE 'L%'
				AND C.EVAL_ODAY <= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				AND D.PPR_SEQ IS NOT NULL AND E.PPR_SEQ IS NOT NULL
				AND B.EVEEUID = B.EVORUID
				AND B.MSE_PCD = 'O'
		]]>
				AND B.EVEEUID = B.EVORUID
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND A.SVCSID = #{svcsid}
			</if>
			<if test="selectedelms != null and selectedelms != ''" >
				AND A.ORGNO IN
				<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">
				#{item}
					</foreach>
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
				AND C.EVAL_SEQ = #{eval_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
				AND C.EVAL_YEAR = #{eval_year}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgnm)">
				AND C.ORGNO IN ((SELECT ORGNO FROM TU_ORGAN WHERE ORGNM LIKE '%'||#{orgnm}||'%'))
			</if>
		) A
		WHERE CMM_PPR_SEQ IS NOT NULL AND JOB_PPR_SEQ IS NOT NULL
	</select>


	<select id="EvalSQL.dolistAllEvalApply" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistAllEvalApply
						진단문제 목록 조회
		*/
		<![CDATA[
		SELECT A.*, UFN_USERNM(A.ROLE_USERID) AS ROLEUNM 
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY A.ORGNO ASC, A.JLVL_PCD DESC, A.USERNM ASC) AS RSEQ,
				A.USERNM, A.ORGNO, D.PPR_SEQ AS CMM_PPR_SEQ, E.PPR_SEQ AS JOB_PPR_SEQ,
				A.USER_PCD, A.JROL_PCD, A.JLVL_PCD, A.USER_TCD, A.STAFFNO , C.EVAL_ODAY, B.MSE_SEQ,
				C.EVAL_SDAY, C.EVAL_EDAY,
				UFN_CODENM('JROL_PCD', A.JROL_PCD, NULL) AS JROL_PCDNM,
				UFN_CODENM('JLVL_PCD', A.JLVL_PCD, NULL) AS JLVL_PNM,
				UFN_USERNM((SELECT T.EVORUID FROM TE_EVAL_MSE T WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'U' AND B.EVAL_SEQ = T.EVAL_SEQ) ) AS UPPERNM,
				UFN_CODENM('APL_SCD', D.APL_SCD, NULL) AS CMM_APL_SNM,
				UFN_CODENM('APL_SCD', E.APL_SCD, NULL) AS JOB_APL_SNM,
				CASE WHEN (C.EVAL_SDAY <= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) THEN
					CASE WHEN (C.EVAL_EDAY <= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) THEN
					'C'
					ELSE
					'Y'
					END
				ELSE
					'N'
				END AS ISOPEN,
				D.APL_SCD AS CMM_APL_SCD,
				E.APL_SCD AS JOB_APL_SCD,
				F.PPR_TITLE ,
				F.JOBNO,
				D.PPR_PCD AS CMM_PPR_PCD,
				E.PPR_PCD AS JOB_PPR_PCD,
				UFN_JOBNM(F.JOBNO) AS JOBNM,
				UFN_ORGNM(F.ORGNO) AS ORGNM,
/*				
				(
					SELECT
						DECODE((SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ) -
						(SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ AND APL_SCD = 'O' ), 0, '실시', '미실시') AS STATUS
					FROM TE_EVAL_MSE T
					WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'O' AND B.EVAL_SEQ = T.EVAL_SEQ
				) AS OCNT,
				(
					SELECT
						DECODE((SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ) -
						(SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ AND APL_SCD = 'O' ), 0, '실시', '미실시') AS STATUS
					FROM TE_EVAL_MSE T WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'D' AND B.EVAL_SEQ = T.EVAL_SEQ
				) AS DCNT,
				(
					SELECT
						DECODE((SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ) -
						(SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ AND APL_SCD = 'O' ), 0, '실시', '미실시') AS STATUS
					FROM TE_EVAL_MSE T WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'U' AND B.EVAL_SEQ = T.EVAL_SEQ
				) AS UCNT,
				(
					SELECT
						DECODE((SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ) -
						(SELECT COUNT(*) FROM TE_EVAL_APPLY P WHERE P.MSE_SEQ = T.MSE_SEQ AND APL_SCD = 'O' ), 0, '실시', '미실시') AS STATUS
					FROM TE_EVAL_MSE T
					WHERE A.ORGNO = T.ORGNO AND T.EVEEUID = B.EVEEUID AND T.MSE_PCD = 'P' AND B.EVAL_SEQ = T.EVAL_SEQ
				) AS PCNT,
*/				
				(
					SELECT DECODE(MIN(DECODE(APL.APL_SCD, NULL, -1, 'O', 1, 0)), -1, '', 1, '실시', '미실시') AS ISAPPLY
					FROM TE_EVAL_MSE MSE INNER JOIN TE_EVAL_APPLY APL ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y' 
					WHERE B.EVAL_SEQ = MSE.EVAL_SEQ AND MSE.EVEEUID = B.EVEEUID AND MSE.MSE_PCD = 'O' GROUP BY MSE.MSE_SEQ
				) AS OCNT,
				(
					SELECT DECODE(MIN(DECODE(APL.APL_SCD, NULL, -1, 'O', 1, 0)), -1, '', 1, '실시', '미실시') AS ISAPPLY
					FROM TE_EVAL_MSE MSE INNER JOIN TE_EVAL_APPLY APL ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y' 
					WHERE B.EVAL_SEQ = MSE.EVAL_SEQ AND MSE.EVEEUID = B.EVEEUID AND MSE.MSE_PCD = 'D' GROUP BY MSE.MSE_SEQ
				) AS DCNT,
				(
					SELECT DECODE(MIN(DECODE(APL.APL_SCD, NULL, -1, 'O', 1, 0)), -1, '', 1, '실시', '미실시') AS ISAPPLY
					FROM TE_EVAL_MSE MSE INNER JOIN TE_EVAL_APPLY APL ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y' 
					WHERE B.EVAL_SEQ = MSE.EVAL_SEQ AND MSE.EVEEUID = B.EVEEUID AND MSE.MSE_PCD = 'U' GROUP BY MSE.MSE_SEQ
				) AS UCNT,
				(
					SELECT DECODE(MIN(DECODE(APL.APL_SCD, NULL, -1, 'O', 1, 0)), -1, '', 1, '실시', '미실시') AS ISAPPLY
					FROM TE_EVAL_MSE MSE INNER JOIN TE_EVAL_APPLY APL ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y' 
					WHERE B.EVAL_SEQ = MSE.EVAL_SEQ AND MSE.EVEEUID = B.EVEEUID AND MSE.MSE_PCD = 'P' GROUP BY MSE.MSE_SEQ
				) AS PCNT,
				B.EVEEUID,

				NVL(R.ROLECD, 'PL') AS ROLECD,
				(CASE WHEN R.ROLECD = 'TA' THEN R.ROLEUID
					ELSE (SELECT MAX(M.USERNO) FROM TU_MEMBER M
							WHERE M.ORGNO = B.ORGNO AND M.USER_PCD = 'PL') END
				) AS ROLE_USERID

			FROM TU_MEMBER A, TE_EVAL C, TE_EVAL_MSE B
			LEFT JOIN TE_EVAL_APPLY D
			ON D.USEYN	= 'Y' AND B.MSE_SEQ = D.MSE_SEQ AND D.PPR_PCD = 'CMM'
			LEFT JOIN TE_EVAL_APPLY E
			ON E.USEYN	= 'Y' AND B.MSE_SEQ = E.MSE_SEQ AND E.PPR_PCD = 'JOB'
			LEFT JOIN TE_EVAL_PAPER F
			ON E.PPR_SEQ = F.PPR_SEQ
			LEFT OUTER JOIN TC_USER_ROLE R
			ON B.ORGNO = R.ORGNO AND R.USERNO = B.EVEEUID AND R.EVAL_SEQ = B.EVAL_SEQ
			WHERE 1=1
				AND B.EVEEUID = A.USERID
				AND B.EVAL_SEQ = C.EVAL_SEQ
				AND A.ORGNO = C.ORGNO
				AND B.USEYN	= 'Y'
				AND A.USEYN	= 'Y'
				AND C.EVAL_ODAY <= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				AND D.PPR_SEQ IS NOT NULL AND E.PPR_SEQ IS NOT NULL
				AND A.JLVL_PCD LIKE 'L%'

		]]>
			<if test="selectedelms != null and selectedelms != ''" >
				AND A.ORGNO IN
				<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
				AND C.EVAL_SEQ = #{eval_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
				AND C.EVAL_YEAR = #{eval_year}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgnm)">
				AND C.ORGNO IN ((SELECT ORGNO FROM TU_ORGAN WHERE ORGNM LIKE '%'||#{orgnm}||'%'))
			</if>
			<if test="stype.equals('other')">
				AND B.EVEEUID != B.EVORUID
				AND B.MSE_PCD != 'O'
			</if>
			<if test="stype.equals('self')">
				AND B.EVEEUID = B.EVORUID
				AND B.MSE_PCD = 'O'
			</if>

			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND A.SVCSID = #{svcsid}
			</if>

			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(apl_scd_chk)">
				AND E.APL_SCD != #{apl_scd_chk}
				AND D.APL_SCD != #{apl_scd_chk}
			</if>
		) A
		WHERE CMM_PPR_SEQ IS NOT NULL AND JOB_PPR_SEQ IS NOT NULL
			AND A.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}
	</select>

	<select id="EvalSQL.dolistEvalDisApply" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalDisApply
						진단문제 미수행자 목록 조회
		*/
		WITH APPLYSTAT AS (
			SELECT EVL.EVAL_SEQ
				, EVL.EVAL_YEAR
				, MSE.ORGNO
				, MSE.MSE_SEQ
				, MSE.EVEEUID
				, MSE.EVORUID
				, MSE.MSE_PCD
				, MIN(CASE WHEN APL.APL_SCD != 'O' THEN 0 ELSE 1 END) AS ISAPPLY
				, MAX(CASE WHEN APL.APL_SCD != 'O' THEN 1 ELSE 0 END) AS XAPPLY
				, MIN(CASE WHEN APL.APL_SCD = 'O' THEN 1 ELSE 0 END) AS YAPPLY
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON MSE.EVEEUID = USR.USERID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.EVAL_SDAY &lt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND EVL.EVAL_YEAR = MNG.EVAL_YEAR AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APL
				ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y'
			WHERE 1=1
				AND MSE.USEYN	= 'Y'
				AND MSE.EVAL_SEQ = #{eval_seq}
			<if test="selectedelms != null and selectedelms != ''" >
				AND MSE.ORGNO IN <foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND MSE.SVCSID = #{svcsid}
			</if>
			GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, MSE.ORGNO, MSE.MSE_SEQ, MSE.EVEEUID, MSE.MSE_PCD, MSE.EVORUID
		)
		SELECT AA.*
		FROM (
			SELECT DISTINCT DECODE(A.MSE_PCD, 'O', 'I', 'O') AS PART, U.USERNM, U.EMAIL
			FROM APPLYSTAT A, TU_MEMBER U
			WHERE A.EVORUID = U.USERNO AND A.XAPPLY = 1
		) AA
		WHERE 1=1
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(part)">
				AND AA.PART = #{part}
			</if>
		ORDER BY AA.PART, AA.USERNM
	</select>


	<select id="EvalSQL.doEvalStatBottom" resultType="DataMap">
		/*
			SQL ID : EvalSQL.doEvalStatBottom
						진단실시율 목록 조회
		*/
		<![CDATA[
		SELECT
			UCNT,
			ORGNM,
			APP,
			ROUND(DECODE(APP, 0, 0, (APP/UCNT) *100)) AS AVRG
		FROM
		(
			SELECT COUNT(1) UCNT,
				UFN_ORGNM(ORGNO) AS ORGNM,
				SUM(APL_SCD) AS APP
			FROM (
				SELECT
					EVEEUID AS USERNO, USERNM, ORGNO, MIN(APL_SCD) AS APL_SCD
				FROM (
					SELECT
						DISTINCT
						B.EVEEUID,
						A.USERNM, A.ORGNO,
						CASE WHEN
							DECODE(D.APL_SCD, 'O', 1, 0) - DECODE(E.APL_SCD, 'O', 0, 1) > 0 THEN
							1
							ELSE
							0
							END
						AS APL_SCD
					FROM



					TE_EVAL C, TU_MEMBER A, TE_EVAL_MSE B
					LEFT JOIN TE_EVAL_APPLY D
					ON D.USEYN	= 'Y' AND B.MSE_SEQ = D.MSE_SEQ AND D.PPR_PCD = 'CMM'AND D.APL_EDTM IS NOT NULL
					LEFT JOIN TE_EVAL_APPLY E
					ON E.USEYN	= 'Y' AND B.MSE_SEQ = E.MSE_SEQ AND E.PPR_PCD = 'JOB' AND E.APL_EDTM IS NOT NULL
					LEFT JOIN TE_EVAL_PAPER F
					ON E.PPR_SEQ = F.PPR_SEQ
					WHERE 1=1
						AND B.EVEEUID = A.USERID
						AND B.USEYN	= 'Y'
						AND A.JLVL_PCD LIKE 'L%'


		]]>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
			AND C.EVAL_SEQ = #{eval_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
			AND C.EVAL_YEAR = #{eval_year}
		</if>
		<if test="selectedelms != null and selectedelms != ''" >
			AND A.ORGNO IN
			<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">
			#{item}
				</foreach>
		</if>

		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgnm)">
					AND C.ORGNO IN ((SELECT ORGNO FROM TU_ORGAN WHERE ORGNM LIKE '%'||#{orgnm}||'%'))
		</if>
		<![CDATA[

				GROUP BY A.ORGNO, A.USERNM,
					B.MSE_SEQ, D.APL_SCD, E.APL_SCD, B.EVORUID, B.EVEEUID
				) B
				WHERE 1=1
				GROUP BY EVEEUID , USERNM, ORGNO
			) A
			GROUP BY ORGNO
		) V
		]]>
	</select>

	<select id="EvalSQL.doEvalStatChart" resultType="DataMap">
		/*
			SQL ID : EvalSQL.doEvalStatChart
						진단실시율 차트
		*/
		<![CDATA[
		WITH ORG AS (
			SELECT O.ORGNO, O.UP_SEQ, O.ORGNM, O.ORG_LVL, O.ORG_IDX, O.ORG_SDAY, O.ORG_EDAY
				, SYS_CONNECT_BY_PATH(O.ORGNO, '|') || '|' AS PATHNO
			FROM TU_ORGAN O WHERE 1 = 1 AND O.ORG_LVL > 4 AND O.USEYN = 'Y'
			START WITH O.ORGNO = '10112971' CONNECT BY PRIOR O.ORGNO = O.UP_SEQ
		)
		]]>
		, INP AS (
			SELECT O.* FROM ORG O WHERE 1=1
			<if test="selectedelms != null and selectedelms != ''" >
				AND O.ORGNO IN
				<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>
		)
		<![CDATA[
		, TOP AS (
			SELECT DISTINCT O.*
			FROM ORG O, INP I
			WHERE O.ORG_LVL = (SELECT MIN(X.ORG_LVL) FROM INP X) AND I.PATHNO LIKE O.PATHNO || '%'
		)
		, DPT AS (
			SELECT T.ORGNO AS TOPNO, O.* FROM ORG O
			INNER JOIN TOP T ON O.PATHNO LIKE T.PATHNO || '%'
			ORDER BY O.ORG_IDX
		)
		, DAT AS (
			SELECT AA.TOPNO, SUM(AA.UCNT) AS USR_CNT, SUM(AA.ACNT) AS APP_CNT
				, ROUND((SUM(AA.ACNT) / SUM(AA.UCNT)) * 100, 2) AS APP_PER
			FROM (
				SELECT A.ORGNO, COUNT(1) AS UCNT, SUM(A.APL_SCD) AS ACNT
					, (SELECT D.TOPNO FROM DPT D WHERE D.ORGNO = A.ORGNO) AS TOPNO
				FROM (
					SELECT B.USERNO, B.ORGNO, MIN(B.ISAPPLY) AS APL_SCD
					FROM (
						SELECT EVL.EVAL_SEQ
							, EVL.EVAL_YEAR
							, USR.ORGNO
							, USR.USERNO
							, ROL.ROLECD
							, MSE.MSE_SEQ
							, MSE.EVORUID
							, MSE.MSE_PCD
							, MIN(CASE WHEN NVL(APL.APL_SCD, 'P') != 'O' THEN 0 ELSE 1 END) AS ISAPPLY
							, MAX(CASE WHEN NVL(APL.APL_SCD, 'P') != 'O' THEN 1 ELSE 0 END) AS XAPPLY
							, MIN(CASE WHEN NVL(APL.APL_SCD, 'P') = 'O' THEN 1 ELSE 0 END) AS YAPPLY
						FROM TU_MEMBER USR
						INNER JOIN TE_EVAL EVL
							ON EVL.ORGNO = USR.ORGNO
						INNER JOIN TE_EVAL_MNG MNG
							ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND EVL.EVAL_YEAR = MNG.EVAL_YEAR AND MNG.USEYN = 'Y'
						LEFT OUTER JOIN TC_USER_ROLE ROL
							ON EVL.EVAL_SEQ = ROL.EVAL_SEQ AND ROL.USERNO = USR.USERNO
						LEFT OUTER JOIN TE_EVAL_MSE MSE
							ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND MSE.EVEEUID = USR.USERNO AND MSE.USEYN = 'Y'
						LEFT OUTER JOIN TE_EVAL_APPLY APL
							ON MSE.MSE_SEQ = APL.MSE_SEQ AND APL.USEYN = 'Y'
						WHERE 1=1
							AND USR.JLVL_PCD LIKE 'L%'
		]]>
						<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
							AND EVL.EVAL_SEQ = #{eval_seq}
						</if>
						<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_year)">
							AND EVL.EVAL_YEAR = #{eval_year}
						</if>
						<if test="selectedelms != null and selectedelms != ''" >
							AND USR.ORGNO IN
							<foreach collection="selectedelms" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
						</if>
						<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgnm)">
							AND USR.ORGNO IN ((SELECT ORGNO FROM TU_ORGAN WHERE ORGNM LIKE '%'||#{orgnm}||'%'))
						</if>
		<![CDATA[
						GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, USR.ORGNO, MSE.MSE_SEQ, USR.USERNO, MSE.MSE_PCD, MSE.EVORUID, ROL.ROLECD
						HAVING ROL.ROLECD != 'EX' OR ROL.ROLECD IS NULL
					) B
					WHERE 1=1
					GROUP BY B.USERNO, B.ORGNO
				) A
				GROUP BY ORGNO
			) AA
			GROUP BY AA.TOPNO
		)

		SELECT TOP.ORGNM, NVL(DAT.USR_CNT, 0) UCNT, NVL(DAT.APP_CNT, 0) APP, NVL(ROUND(DAT.APP_PER), 0) AVRG
		FROM TOP
		LEFT OUTER JOIN DAT ON DAT.TOPNO = TOP.ORGNO
		ORDER BY TOP.ORG_IDX
		]]>
	</select>

	<select id="EvalSQL.dolistEvalMseTable" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalMseTable
						다면평가관계 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('MSE_PCD', AA.MSE_PCD, NULL) AS MSE_PNM
			, UFN_CODENM('MSE_TCD', AA.MSE_TCD, NULL) AS MSE_TNM
			, UFN_CODENM('MSE_SCD', AA.MSE_SCD, NULL) AS MSE_SNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_MSE A
			WHERE 1=1
				AND A.USEYN	= 'Y'
			<if test="eval_seq != null and eval_seq != ''">
				AND A.EVAL_SEQ	= #{eval_seq}
			</if>
			<if test="orgno != null and orgno != ''">
				AND A.ORGNO	= #{orgno}
			</if>
			<if test="eveeuid != null and eveeuid != ''">
				AND A.EVEEUID	= #{eveeuid}
			</if>
			<if test="evoruid != null and evoruid != ''">
				AND A.EVORUID	= #{evoruid}
			</if>
			<if test="useyn != null and useyn != ''">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="svcsid != null and svcsid != ''">
				AND A.SVCSID	= #{svcsid}
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}

	</select>


	<update id="EvalSQL.modifyEvalApply" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalApply
						진단문제 수정
		*/

		UPDATE TE_EVAL_APPLY
		SET MODDTM = SYSDATE, MODUID = #{moduid}

		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(apl_sdtm)"	> , APL_SDTM		= SYSDATE </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(apl_edtm)"	> , APL_EDTM		= SYSDATE </if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(mrk_dtm)"	> , MRK_DTM		= SYSDATE </if>
		<if test="apl_totpt	!= ''"> , APL_TOTPT		= #{apl_totpt} </if>
		<if test="apl_note	!= ''"> , APL_NOTE		= #{apl_note} </if>
		<if test="apl_actm	!= ''"> , APL_ACTM		= #{apl_actm} </if>
		<if test="apl_opt	!= ''"> , APL_OPT		= #{apl_opt} </if>
		<if test="apl_tcd	!= ''"> , APL_TCD		= #{apl_tcd}	</if>
		<if test="apl_scd	!= ''"> , APL_SCD		= #{apl_scd}	</if>
		<if test="useyn	!= ''"> , USEYN		= #{useyn} </if>
		WHERE MSE_SEQ = #{mse_seq}
			AND PPR_SEQ		= #{ppr_seq}
			AND PPR_PCD		= #{ppr_pcd}
			AND ASPSID		= #{aspsid}
			AND SVCSID		= #{svcsid}
			AND APL_SCD		!= 'O'
	</update>

	<insert id="EvalSQL.appendEvalApply" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalApply
						진단문제 등록
		*/

			INSERT INTO TE_EVAL_APPLY (
			MSE_SEQ, PPR_SEQ, PPR_PCD,
			APL_SDTM, APL_EDTM, MRK_DTM,
			APL_TOTPT, APL_NOTE, APL_ACTM,
			APL_OPT, APL_TCD, APL_SCD,
			REGUID, MODUID, REGDTM,
			MODDTM, USEYN, ASPSID,
			SVCSID)
			VALUES
			( #{mse_seq}
			,#{ppr_seq}
			,#{ppr_pcd}
			,#{apl_sdtm}
			,#{apl_edtm}
			,#{mrk_dtm}
			,#{apl_totpt}
			,#{apl_note}
			,#{apl_actm}
			,#{apl_opt}
			,#{apl_tcd}
			,#{apl_scd}
			,#{reguid}
			,#{moduid}
			,SYSDATE
			,SYSDATE
			,#{useyn}
			,#{aspsid}
			,#{svcsid} )
	</insert>

	<delete id="EvalSQL.removeEvalApply" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalApply
						진단문제 삭제
		*/
		DELETE FROM TE_EVAL_APPLY
		WHERE MSE_SEQ = #{mse_seq}
		<if test="ppr_seq != null and ppr_seq != ''">
			AND PPR_SEQ = #{ppr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD = #{ppr_pcd}
		</if>
		<if test="useyn != null and useyn != ''">
			AND USEYN = #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID = #{svcsid}
		</if>
	</delete>

	<delete id="EvalSQL.removeEvalApplyLog" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalApplyLog
						진단로그 삭제
		*/
		DELETE FROM TE_EVAL_APPLOG
		WHERE MSE_SEQ = #{mse_seq}
		<if test="ppr_seq != null and ppr_seq != ''">
			AND PPR_SEQ = #{ppr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND PPR_PCD = #{ppr_pcd}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND SVCSID = #{svcsid}
		</if>
	</delete>



<!-- ====================================================================================== -->
<!--						진단응시내역 (TE_EVAL_APPLOG)											-->
<!-- ====================================================================================== -->
	<select id="EvalSQL.getoneEvalApplog" parameterType="dataMap" resultType="dataMap">
		/*
			SQL ID: EvalSQL.getoneEvalApplog
						진단응시내역 정보 조회
		*/

		SELECT A.*
			, UFN_CODENM('QUE_PCD', A.QUE_PCD, NULL) AS QUE_PNM
			, UFN_CODENM('PPR_PCD', A.PPR_PCD, NULL) AS PPR_PNM
		FROM TE_EVAL_APPLOG A
		WHERE A.MSE_SEQ	= #{mse_seq}
			AND A.PPR_SEQ	= #{ppr_seq}
			AND A.QUE_SEQ	= #{que_seq}
			AND A.PPR_PCD		= #{ppr_pcd}
	</select>

	<select id="EvalSQL.countEvalApplog" resultType="int">
		/*
			SQL ID : EvalSQL.countEvalApplog
						진단응시내역 목록 카운트
		*/

		SELECT COUNT(1)
		FROM TE_EVAL_APPLOG A
		WHERE 1=1
			AND A.USEYN	= 'Y'
		<if test="mse_seq != null and mse_seq != ''">
			AND A.MSE_SEQ	= #{mse_seq}
		</if>
		<if test="ppr_seq != null and ppr_seq != ''">
			AND A.PPR_SEQ	= #{ppr_seq}
		</if>
		<if test="ppr_pcd != null and ppr_pcd != ''">
			AND A.PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="que_seq != null and que_seq != ''">
			AND A.QUE_SEQ	= #{que_seq}
		</if>
		<if test="useyn != null and useyn != ''">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="svcsid != null and svcsid != ''">
			AND A.SVCSID	= #{svcsid}
		</if>
	</select>


	<select id="EvalSQL.dolistEvalApplog" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistEvalApplog
						진단응시내역 목록 조회
		*/

		SELECT AA.*
			, UFN_CODENM('QUE_PCD', AA.QUE_PCD, NULL) AS QUE_PNM
			, UFN_CODENM('PPR_PCD', AA.PPR_PCD, NULL) AS PPR_PNM
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) AS RSEQ
				, A.*
			FROM TE_EVAL_APPLOG A
			WHERE 1=1
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_seq)">
				AND A.MSE_SEQ	= #{mse_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_seq)">
				AND A.PPR_SEQ	= #{ppr_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_pcd)">
				AND A.PPR_PCD	= #{ppr_pcd}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(que_seq)">
				AND A.QUE_SEQ	= #{que_seq}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(useyn)">
				AND A.USEYN	= #{useyn}
			</if>
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND A.SVCSID	= #{svcsid}
			</if>
		)AA
		WHERE AA.RSEQ BETWEEN (${page}-1) * ${rows} + 1 AND ${page} * ${rows}

	</select>


	<update id="EvalSQL.modifyEvalApplog" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.modifyEvalApplog
						진단응시내역 수정
		*/

		UPDATE TE_EVAL_APPLOG
		SET MODDTM = SYSDATE, MODUID = #{moduid}
		<if test="mse_seq	!= ''"> , MSE_SEQ		= #{mse_seq}	</if>
		<if test="ppr_seq	!= ''"> , PPR_SEQ		= #{ppr_seq}	</if>
		<if test="que_seq	!= ''"> , QUE_SEQ		= #{que_seq}	</if>
		<if test="apl_idx	!= ''"> , APL_IDX		= #{apl_idx}	</if>
		<if test="apl_ans	!= ''"> , APL_ANS		= #{apl_ans}	</if>
		<if test="ans_cmmt	!= ''"> , ANS_CMMT	= #{ans_cmmt}	</if>
		<if test="ppr_pcd	!= ''"> , PPR_PCD		= #{ppr_pcd}	</if>
		<if test="que_pcd	!= ''"> , QUE_PCD		= #{que_pcd}	</if>
		<if test="correct_yn	!= ''"> , CORRECT_YN= #{correct_yn}	</if>
		<if test="aspsid	!= ''"> , ASPSID		= #{aspsid}	</if>
		<if test="svcsid	!= ''"> , SVCSID		= #{svcsid}	</if>
		WHERE MSE_SEQ = #{mse_seq}

	</update>


	<insert id="EvalSQL.appendEvalApplyLog" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalApplyLog
						진단문제 등록
		*/

			INSERT INTO TE_EVAL_APPLOG
				(MSE_SEQ, PPR_SEQ, QUE_SEQ, PPR_PCD, APL_IDX,
				APL_ANS, ANS_CMMT, QUE_PCD, CORRECT_YN,
				REGUID, MODUID, REGDTM, MODDTM, ASPSID, SVCSID)
			VALUES
			( #{mse_seq}
			,#{ppr_seq}
			,#{que_seq}
			,#{ppr_pcd}
			,#{apl_idx}
			,#{apl_ans}
			,#{ans_cmmt}
			,(SELECT QUE_PCD FROM TE_EVAL_QUE WHERE QUE_SEQ = #{que_seq})
			,#{correct_yn}
			,#{reguid}
			,#{moduid}
			,SYSDATE
			,SYSDATE
			,#{aspsid}
			,#{svcsid} )
	</insert>

	<insert id="EvalSQL.appendEvalApplog" parameterType="DataMap">
		/*
			SQL ID : EvalSQL.appendEvalApplog
						진단응시내역 등록
		*/

		INSERT INTO TE_EVAL_APPLOG (
		MSE_SEQ, PPR_SEQ, QUE_SEQ,
		APL_IDX, APL_ANS, ANS_CMMT, PPR_PCD,
		QUE_PCD, CORRECT_YN, REGUID,
		MODUID, REGDTM, MODDTM,
		ASPSID, SVCSID)
		VALUES
		( #{mse_seq}
		,#{ppr_seq}
		,#{que_seq}
		,#{apl_idx}
		,#{apl_ans}
		,#{ans_cmmt}
		,#{ppr_pcd}
		,#{que_pcd}
		,#{correct_yn}
		,#{reguid}
		,#{moduid}
		,SYSDATE
		,SYSDATE
		,#{aspsid}
		,#{svcsid} )
	</insert>

	<delete id="EvalSQL.removeEvalApplog" parameterType="dataMap">
		/*
			SQL ID: EvalSQL.removeEvalApplog
						진단응시내역 삭제
		*/
		DELETE FROM TE_EVAL_APPLOG
		WHERE MSE_SEQ = #{mse_seq}
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_seq)">
			AND A.PPR_SEQ	= #{ppr_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(ppr_pcd)">
			AND A.PPR_PCD	= #{ppr_pcd}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(que_seq)">
			AND A.QUE_SEQ	= #{que_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(useyn)">
			AND A.USEYN	= #{useyn}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
			AND A.SVCSID	= #{svcsid}
		</if>
	</delete>


	<select id="EvalSQL.getEvalApplyGetJobno" resultType="dataMap">
	/*
		SQL ID: EvalSQL.getEvalApplyGetJobno
			jobno 반환
	*/

		SELECT
			C.JOBNO
		FROM TE_EVAL_MSE A,
			TE_EVAL_APPLY B,
			TE_EVAL_PAPER C
		WHERE 1=1
			AND A.MSE_SEQ = B.MSE_SEQ
			AND B.PPR_PCD = 'JOB'
			AND B.PPR_SEQ = C.PPR_SEQ
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eval_seq)">
			AND A.EVAL_SEQ	= #{eval_seq}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
			AND A.ORGNO	= #{orgno}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(eveeuid)">
			AND A.EVEEUID	= #{eveeuid}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(evoruid)">
			AND A.EVORUID	= #{evoruid}
		</if>
		<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(useyn)">
			AND A.USEYN	= #{useyn}
		</if>

	</select>



<!-- ====================================================================================== -->
<!--						평가 결과														-->
<!-- ====================================================================================== -->
	<sql id="eval_result_with">
		/*
			개인 평가 결과 SET
		*/

	</sql>


	<select id="EvalSQL.dolistPersonTable2" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistPersonTable2
			개인 평가 결과 - 본인 진단평가결과 , 본인평균
		*/
		SELECT AA.*
			, ROUND(O_AVGPT*(BB.O_WEIGHT/100) + U_AVGPT*(BB.U_WEIGHT/100) + P_AVGPT*(BB.P_WEIGHT/100) + D_AVGPT*(BB.D_WEIGHT/100), 1) AS T_AVGPT
		FROM (
			SELECT EVL.EVAL_SEQ
				, MSE.EVEEUID AS USERID
				, UFN_USERNM(MSE.EVEEUID) AS USERNM
				, MSE.ORGNO
				, UFN_ORGNM(MSE.ORGNO) AS ORGNM
				, USR.JLVL_PCD
				, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
				, LOG.PPR_SEQ
				, LOG.PPR_PCD
				, UFN_CODENM('PPR_PCD', LOG.PPR_PCD, NULL) AS PPR_PNM
				, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'O' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS O_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'U' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS U_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'P' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS P_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'D' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS D_AVGPT
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND MSE.USEYN = 'Y'
				AND EVL.EVAL_YEAR = #{eval_year}
				AND MSE.EVEEUID = #{userno}
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND MSE.SVCSID	= #{svcsid}
			</if>
			GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD
		) AA
		LEFT OUTER JOIN TE_EVAL BB ON BB.EVAL_SEQ = AA.EVAL_SEQ AND BB.ORGNO = AA.ORGNO
		ORDER BY AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD DESC, AA.USERNM, AA.PPR_PCD

	</select>

	<select id="EvalSQL.getonePersonTable1" resultType="DataMap">
		/*
			SQL ID : EvalSQL.getonePersonTable1
			개인 평가 결과 - 본인 진단평가결과 , 본인평균
		*/
		SELECT AA.*
			, ROUND(O_AVGPT*(BB.O_WEIGHT/100) + U_AVGPT*(BB.U_WEIGHT/100) + P_AVGPT*(BB.P_WEIGHT/100) + D_AVGPT*(BB.D_WEIGHT/100), 1) AS T_AVGPT
			, (SELECT PPR.JOBNO FROM TE_EVAL_PAPER PPR WHERE PPR.PPR_SEQ IN (
				SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
					SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = AA.USERID AND USEYN = 'Y' )) AND PPR.EVAL_SEQ = AA.EVAL_SEQ) AS JOBNO
		FROM (
			SELECT EVL.EVAL_SEQ
				, MSE.EVEEUID AS USERID
				, UFN_USERNM(MSE.EVEEUID) AS USERNM
				, MSE.ORGNO
				, UFN_ORGNM(MSE.ORGNO) AS ORGNM
				, USR.JLVL_PCD
				, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'O' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS O_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'U' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS U_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'P' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS P_AVGPT
				, NVL(ROUND(AVG(CASE WHEN MSE.MSE_PCD = 'D' THEN UFN_GETPOINT(LOG.PPR_PCD, LOG.APL_ANS) END) / 20, 1), 0) AS D_AVGPT
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND MSE.USEYN = 'Y'
				AND EVL.EVAL_YEAR = #{eval_year}
				AND MSE.EVEEUID = #{userno}
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND MSE.SVCSID	= #{svcsid}
			</if>
			GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO
		) AA
		LEFT OUTER JOIN TE_EVAL BB ON BB.EVAL_SEQ = AA.EVAL_SEQ AND BB.ORGNO = AA.ORGNO
		ORDER BY AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD DESC, AA.USERNM
	</select>


	<select id="EvalSQL.getonePersonChart1" resultType="DataMap">
		/*
			SQL ID : EvalSQL.getonePersonChart1
			개인 평가 결과 - 상세결과1 - 조직내 본인 수준
				PAVG, OAVG, MAVG :부문, 그룹, 본인
		*/

		WITH WA AS (
			SELECT EVL.EVAL_SEQ
				, MSE.ORGNO
				, MSE.EVEEUID AS USERID
				, USR.JLVL_PCD
				, LOG.PPR_SEQ
				, LOG.PPR_PCD
				, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
				, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND MSE.USEYN = 'Y'
				AND EVL.EVAL_YEAR = #{eval_year}
				AND MSE.EVEEUID = #{userno}
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND MSE.SVCSID	= #{svcsid}
			</if>
			GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
		),
		WB AS (
			SELECT EVL.EVAL_SEQ
				, MSE.ORGNO
				, MSE.EVEEUID AS USERID
				, USR.JLVL_PCD
				, LOG.PPR_SEQ
				, LOG.PPR_PCD
				, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
				, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND MSE.USEYN = 'Y'
				AND EVL.EVAL_YEAR = #{eval_year}
			<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
				AND MSE.SVCSID	= #{svcsid}
			</if>
			GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
		)
		SELECT
		(
			SELECT NVL(ROUND(AVG(WB.JOBPT), 1), 0)
			FROM WB
			LEFT OUTER JOIN TE_EVAL BB ON BB.EVAL_SEQ = WB.EVAL_SEQ AND BB.ORGNO = WB.ORGNO
		) AS PAVG,
		(
			SELECT NVL(ROUND(AVG(WB.JOBPT), 1), 0)
			FROM WB, WA
			LEFT OUTER JOIN TE_EVAL BB ON BB.EVAL_SEQ = WA.EVAL_SEQ AND BB.ORGNO = WA.ORGNO
			WHERE WB.ORGNO = WA.ORGNO

		) AS OAVG,
		(
			SELECT NVL(ROUND(AVG(WA.JOBPT), 1), 0)
			FROM WA
			LEFT OUTER JOIN TE_EVAL BB ON BB.EVAL_SEQ = WA.EVAL_SEQ
		) AS MAVG
		FROM DUAL

	</select>



	<select id="EvalSQL.getonePersonChart2" resultType="DataMap">
		/*
			SQL ID : EvalSQL.getonePersonChart2
			개인 평가 결과 - 상세결과1 - 직무평균(jobno)
				직무번호, 직무명, 사원평균, 선임평균, 책임평균, 수석평균
		*/

		SELECT STO.*, UFN_JOBNM(STO.JOBNO) AS JOBNM
		FROM (
			SELECT AA.JOBNO, AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD, AA.PPR_PCD
				, NVL(ROUND(AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.JOBPT END), 2), 0) AS L10_AVGPT /* 사원 */
				, NVL(ROUND(AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.JOBPT END), 2), 0) AS L20_AVGPT /* 선임 */
				, NVL(ROUND(AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.JOBPT END), 2), 0) AS L30_AVGPT /* 책임 */
				, NVL(ROUND(AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.JOBPT END), 2), 0) AS L40_AVGPT /* 수석 */
			FROM (
				SELECT EVL.EVAL_SEQ
					, MSE.ORGNO
					, UFN_ORGNM(MSE.ORGNO) AS ORGNM
					, USR.JLVL_PCD
					, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
					, MSE.EVEEUID AS USERID
					, UFN_USERNM(MSE.EVEEUID) AS USERNM
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, UFN_CODENM('PPR_PCD', LOG.PPR_PCD, NULL) AS PPR_PNM
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND LOG.PPR_PCD = 'JOB'
					AND EVL.EVAL_YEAR = #{eval_year}
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
					AND MSE.ORGNO	= #{orgno}
				</if>
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(svcsid)">
					AND MSE.SVCSID	= #{svcsid}
				</if>
				GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			WHERE 1 = 1
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(jobno)">
					AND AA.JOBNO	= #{jobno}
				</if>
			GROUP BY AA.JOBNO, AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD, AA.PPR_PCD
			ORDER BY AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD, AA.PPR_PCD
		) STO
		ORDER BY JOBNO ASC
	</select>

	<select id="EvalSQL.dolistPersonChart3" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistPersonChart3
			개인 평가 결과 - 상세결과1 - 직무역량평가 레이다 차트
				차트구분, KEY, 값
		*/

		WITH WA AS (
			SELECT EVL.EVAL_SEQ
				, MSE.ORGNO
				, MSE.EVEEUID AS USERID
				, USR.JLVL_PCD
				, LOG.PPR_SEQ
				, LOG.PPR_PCD
				, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND EVL.EVAL_YEAR = #{eval_year}
				AND MSE.EVEEUID = #{userno}
			GROUP BY EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD
		)
		SELECT RADAR_TYPE
			, MAX(DECODE(RADAR_PART, 'REQ', NVL(ROUND(RADAR_AVGPT / 20, 2), 0))) AS REQ_AVGPT
			, MAX(DECODE(RADAR_PART, 'OWN', NVL(ROUND(RADAR_AVGPT / 20, 2), 0))) AS OWN_AVGPT
		FROM (
			SELECT 'REQ' AS RADAR_PART, AA.*
			FROM (
				(	/* SUPEX 역량평가 */
					SELECT 'SUPEX 역량평가' AS RADAR_TYPE
						, 1 AS RADAR_IDX
						, NVL(ROUND(AVG(JOBPT), 2), 0) AS RADAR_AVGPT
					FROM (
						SELECT Q.QUE_SEQ
							, NVL(AVG(UFN_REQPOINT(L.PPR_PCD, L.PPR_SEQ, Q.QUE_SEQ, U.JLVL_PCD)), 0) AS JOBPT
						FROM WA, TE_EVAL_APPLOG L, TE_EVAL_QUE Q, TE_EVAL_MSE M, TU_MEMBER U
						WHERE L.QUE_SEQ = Q.QUE_SEQ
							AND M.EVEEUID = U.USERID
							AND L.MSE_SEQ = M.MSE_SEQ
							AND L.PPR_PCD = 'CMM'
							AND U.JLVL_PCD = WA.JLVL_PCD
						GROUP BY M.EVAL_SEQ, U.USERID, L.PPR_SEQ, L.PPR_PCD, Q.QUE_SEQ
					)
				)
				UNION ALL
				(	/* 역량 분류별 직무평가 */
					SELECT Q.QUE_TAG AS RADAR_TYPE
						, 2 AS RADAR_IDX
						, NVL(AVG(L.REQ_LVL) * 20, 0) AS RADAR_AVGPT
					FROM WA, TE_EVAL_SET S, TE_EVAL_REQLVL L, TE_EVAL_QUE Q
					WHERE L.SET_SEQ = S.SET_SEQ
						AND S.QUE_SEQ = Q.QUE_SEQ
						AND S.PPR_PCD = 'JOB'
						AND L.CAPA_PCD = 'JOB'
						AND S.PPR_SEQ = WA.PPR_SEQ /*진단지별 */
						AND L.JLVL_PCD = WA.JLVL_PCD /*직위별*/
					GROUP BY Q.QUE_TAG
				)
			) AA

		UNION ALL

			SELECT 'OWN' AS RADAR_PART, CC.*
			FROM (
				(	/* SUPEX 역량평가 */
					SELECT 'SUPEX 역량평가' AS RADAR_TYPE
						, 1 AS RADAR_IDX
						, NVL(ROUND(AVG(JOBPT), 2), 0) AS RADAR_AVGPT
					FROM (
						SELECT Q.QUE_SEQ
							, NVL(SUM(CASE WHEN L.PPR_PCD = 'CMM' THEN UFN_WEIGHTPT2(M.MSE_SEQ, 'CMM', L.APL_ANS) END), 0) AS JOBPT
						FROM WA, TE_EVAL_APPLOG L, TE_EVAL_QUE Q, TE_EVAL_MSE M
						WHERE L.QUE_SEQ = Q.QUE_SEQ
							AND L.MSE_SEQ = M.MSE_SEQ
							AND L.PPR_PCD = 'CMM'
							AND L.PPR_SEQ = WA.PPR_SEQ /*진단지별 */
							AND M.EVEEUID = WA.USERID
						GROUP BY M.EVAL_SEQ, L.PPR_SEQ, L.PPR_PCD, Q.QUE_SEQ
					)
				)
				UNION ALL
				(	/* 역량 분류별 직무평가 */
					SELECT QUE_TAG AS RADAR_TYPE
						, 2 AS RADAR_IDX
						, NVL(ROUND(AVG(JOBPT), 2), 0) AS RADAR_AVGPT
					FROM (
						SELECT Q.QUE_TAG, Q.QUE_SEQ
							, NVL(SUM(CASE WHEN L.PPR_PCD = 'JOB' THEN UFN_WEIGHTPT2(M.MSE_SEQ, 'JOB', L.APL_ANS) END), 0) AS JOBPT
						FROM WA, TE_EVAL_APPLOG L, TE_EVAL_QUE Q, TE_EVAL_MSE M
						WHERE L.QUE_SEQ = Q.QUE_SEQ
							AND L.MSE_SEQ = M.MSE_SEQ
							AND L.PPR_PCD = 'JOB'
							AND L.PPR_SEQ = WA.PPR_SEQ /*진단지별 */
							AND M.EVEEUID = WA.USERID
						GROUP BY M.EVAL_SEQ, L.PPR_SEQ, L.PPR_PCD, Q.QUE_TAG, Q.QUE_SEQ
					)
					GROUP BY QUE_TAG
				)
			) CC
		)
		GROUP BY RADAR_IDX, RADAR_TYPE
		ORDER BY RADAR_IDX, RADAR_TYPE

	</select>


	<select id="EvalSQL.dolistPersonChart4" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistPersonChart4
			개인 평가 결과 - 상세결과1 - 연간 트랜드

		*/

			SELECT AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD
				, NVL(ROUND(AVG(AA.JOBPT), 2), 0) AS TOT_AVGPT /* 공통/직무 */
				, NVL(ROUND(AVG(CASE WHEN AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 2), 0) AS TOT_CMMPT /* 공통 */
				, NVL(ROUND(AVG(CASE WHEN AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 2), 0) AS TOT_JOBPT /* 직무 */
			FROM (
				SELECT EVL.EVAL_YEAR
					, EVL.EVAL_SEQ
					, MSE.ORGNO
					, UFN_ORGNM(MSE.ORGNO) AS ORGNM
					, USR.JLVL_PCD
					, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
					, MSE.EVEEUID AS USERID
					, UFN_USERNM(MSE.EVEEUID) AS USERNM
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, UFN_CODENM('PPR_PCD', LOG.PPR_PCD, NULL) AS PPR_PNM
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.EVEEUID = #{userno}
				GROUP BY EVL.EVAL_YEAR, EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			WHERE 1 = 1
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD
			ORDER BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JLVL_PCD
	</select>

	<select id="EvalSQL.dolistYearTrendResult" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistYearTrendResult
			개인 평가 결과 - 상세결과1 - 연간 Trend 차트
				차트구분, KEY, 값
		*/

		WITH WA AS (
			SELECT EVL.EVAL_SEQ
				, MSE.ORGNO
				, MSE.EVEEUID AS USERID
				, USR.JLVL_PCD
				, LOG.PPR_SEQ
				, LOG.PPR_PCD
				, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
			FROM TE_EVAL_MSE MSE
			INNER JOIN TU_MEMBER USR
				ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
			INNER JOIN TE_EVAL EVL
				ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
			INNER JOIN TE_EVAL_MNG MNG
				ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLY APP
				ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
			INNER JOIN TE_EVAL_APPLOG LOG
				ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
			WHERE 1 = 1
				AND MSE.EVEEUID = #{userno}
				AND EVL.EVAL_YEAR = #{eval_year}
			GROUP BY EVL.EVAL_YEAR, EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD
		)
		SELECT CHART_YEAR
			, MAX(DECODE(CHART_PART, 'ALL', ROUND(CHART_AVGPT / 20, 2))) AS ALL_AVGPT
			, MAX(DECODE(CHART_PART, 'CMM', ROUND(CHART_AVGPT / 20, 2))) AS CMM_AVGPT
			, MAX(DECODE(CHART_PART, 'JOB', ROUND(CHART_AVGPT / 20, 2))) AS JOB_AVGPT
		FROM (
			SELECT 'OWN' AS CHART_PART, CC.*
			FROM (
				(	/* 역량 분류별 직무평가 */
					SELECT QUE_TAG AS CHART_YEAR
						, NVL(ROUND(AVG(JOBPT), 2), 0) AS CHART_AVGPT
					FROM (
						SELECT Q.QUE_TAG, Q.QUE_SEQ
							, NVL(SUM(CASE WHEN L.PPR_PCD = 'JOB' THEN UFN_WEIGHTPT2(M.MSE_SEQ, 'JOB', L.APL_ANS) END), 0) AS JOBPT
						FROM WA, TE_EVAL_APPLOG L, TE_EVAL_QUE Q, TE_EVAL_MSE M
						WHERE L.QUE_SEQ = Q.QUE_SEQ
							AND L.MSE_SEQ = M.MSE_SEQ
							AND L.PPR_SEQ = WA.PPR_SEQ /*진단지별 */
							AND M.EVEEUID = WA.USERID
						GROUP BY Q.QUE_TAG, Q.QUE_SEQ
					)
					GROUP BY PPR_PCD
				)
			) AA

		UNION ALL

			SELECT 'OWN' AS CHART_PART, CC.*
			FROM (
				(	/* 역량 분류별 직무평가 */
					SELECT QUE_TAG AS CHART_YEAR
						, NVL(ROUND(AVG(JOBPT), 2), 0) AS CHART_AVGPT
					FROM (
						SELECT Q.QUE_TAG, Q.QUE_SEQ
							, NVL(SUM(CASE WHEN L.PPR_PCD = 'JOB' THEN UFN_WEIGHTPT2(M.MSE_SEQ, 'JOB', L.APL_ANS) END), 0) AS JOBPT
						FROM WA, TE_EVAL_APPLOG L, TE_EVAL_QUE Q, TE_EVAL_MSE M
						WHERE L.QUE_SEQ = Q.QUE_SEQ
							AND L.MSE_SEQ = M.MSE_SEQ
							AND L.PPR_PCD = 'JOB'
							AND L.PPR_SEQ = WA.PPR_SEQ /*진단지별 */
							AND M.EVEEUID = WA.USERID
						GROUP BY Q.QUE_TAG, Q.QUE_SEQ
					)
					GROUP BY QUE_TAG
				)
			) BB
		)
		GROUP BY CHART_YEAR
		ORDER BY CHART_YEAR

	</select>


	<select id="EvalSQL.dolistOrgTableResult" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistOrgTableResult
			조직 평가 결과 - 상세결과1 - 조직평균
				조직번호, 조직명, 조직순서, 사원평균, 선임평균, 책임평균, 수석평균
		*/

		SELECT STO.*
			, ORG.ORGNM
			, ORG.ORG_IDX
		FROM (
			SELECT AA.EVAL_SEQ, AA.ORGNO, AA.EVAL_YEAR, AA.JOBNO, UFN_JOBNM(AA.JOBNO) AS JOBNM
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 0) AS L10_CMMAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 0) AS L20_CMMAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 0) AS L30_CMMAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 0) AS L40_CMMAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 0) AS L10_JOBAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 0) AS L20_JOBAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 0) AS L30_JOBAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 0) AS L40_JOBAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.JOBPT END), 0) AS L10_TOTAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.JOBPT END), 0) AS L20_TOTAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.JOBPT END), 0) AS L30_TOTAVG
				, NVL(AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.JOBPT END), 0) AS L40_TOTAVG
				, NVL(AVG(CASE WHEN AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 0) AS AVG_CMMAVG
				, NVL(AVG(CASE WHEN AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 0) AS AVG_JOBAVG
				, NVL(AVG(AA.JOBPT), 0) AS AVG_TOTAVG
			FROM (
				SELECT EVL.EVAL_SEQ
					, EVL.EVAL_YEAR
					, MSE.ORGNO
					, USR.JLVL_PCD
					, MSE.EVEEUID AS USERID
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, LOG.QUE_SEQ
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.USEYN = 'Y'
					AND EVL.EVAL_YEAR = #{eval_year}
				<if test="@org.apache.commons.lang.StringUtils@isNotEmpty(orgno)">
					AND MSE.ORGNO	= #{orgno}
				</if>
				GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JOBNO
		) STO
		INNER JOIN TU_ORGAN ORG ON ORG.ORGNO = STO.ORGNO
/*		GROUP BY STO.ORGNO, ORG.ORGNM, STO.PPR_PCD, STO.JOBNO, ORG.ORG_IDX	*/
		ORDER BY ORG.ORG_IDX
	</select>


	<select id="EvalSQL.dolistOrgChart1" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistOrgChart1
			조직 평가 결과 - 상세결과1 - 부문 VS 조직 평균

		*/
		WITH STO AS (
			SELECT AA.EVAL_SEQ, AA.ORGNO, AA.EVAL_YEAR, AA.JOBNO, UFN_JOBNM(AA.JOBNO) AS JOBNM
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L10_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L20_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L30_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L40_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L10_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L20_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L30_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L40_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.JOBPT END) AS L10_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.JOBPT END) AS L20_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.JOBPT END) AS L30_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.JOBPT END) AS L40_TOTAVG
			FROM (
				SELECT EVL.EVAL_SEQ
					, EVL.EVAL_YEAR
					, MSE.ORGNO
					, USR.JLVL_PCD
					, MSE.EVEEUID AS USERID
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, LOG.QUE_SEQ
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.USEYN = 'Y'
					AND EVL.EVAL_YEAR = #{eval_year}
				GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JOBNO
		)

		SELECT IDX
			, NVL(ROUND(L10_TOTPT, 2), 0) L10_TOTPT
			, NVL(ROUND(L20_TOTPT, 2), 0) L20_TOTPT
			, NVL(ROUND(L30_TOTPT, 2), 0) L30_TOTPT
			, NVL(ROUND(L40_TOTPT, 2), 0) L40_TOTPT
		FROM (
			(SELECT 1 AS IDX, AVG(L10_TOTAVG) L10_TOTPT, AVG(L20_TOTAVG) L20_TOTPT, AVG(L30_TOTAVG) L30_TOTPT, AVG(L40_TOTAVG) L40_TOTPT FROM STO)
			UNION ALL
			(SELECT 2 AS IDX, AVG(L10_TOTAVG) L10_TOTPT, AVG(L20_TOTAVG) L20_TOTPT, AVG(L30_TOTAVG) L30_TOTPT, AVG(L40_TOTAVG) L40_TOTPT
				FROM STO WHERE ORGNO = #{orgno} GROUP BY ORGNO)
		)
		ORDER BY IDX

	</select>


	<select id="EvalSQL.dolistOrgChart2" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistOrgChart2
			조직 평가 결과 - 상세결과1 - 조직 VS 목표 수준

		*/
		WITH STO AS (
			SELECT AA.EVAL_SEQ, AA.ORGNO, AA.EVAL_YEAR, AA.JOBNO, UFN_JOBNM(AA.JOBNO) AS JOBNM
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L10_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L20_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L30_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L40_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L10_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L20_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L30_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L40_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.JOBPT END) AS L10_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.JOBPT END) AS L20_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.JOBPT END) AS L30_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.JOBPT END) AS L40_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.REQPT END) AS L10_REQAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.REQPT END) AS L20_REQAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.REQPT END) AS L30_REQAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.REQPT END) AS L40_REQAVG
			FROM (
				SELECT EVL.EVAL_SEQ
					, EVL.EVAL_YEAR
					, MSE.ORGNO
					, USR.JLVL_PCD
					, MSE.EVEEUID AS USERID
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, LOG.QUE_SEQ
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
					, NVL(AVG(UFN_REQPOINT(LOG.PPR_PCD, LOG.PPR_SEQ, LOG.QUE_SEQ, USR.JLVL_PCD)) / 20, 0) AS REQPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.USEYN = 'Y'
					AND EVL.EVAL_YEAR = #{eval_year}
				GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JOBNO
		)

		SELECT ORGNO, UFN_ORGNM(ORGNO) AS ORGNM
			, NVL(ROUND(AVG(L10_TOTAVG), 2), 0) L10_TOTPT
			, NVL(ROUND(AVG(L20_TOTAVG), 2), 0) L20_TOTPT
			, NVL(ROUND(AVG(L30_TOTAVG), 2), 0) L30_TOTPT
			, NVL(ROUND(AVG(L40_TOTAVG), 2), 0) L40_TOTPT
			, NVL(ROUND(AVG(L10_REQAVG), 2), 0) L10_REQPT
			, NVL(ROUND(AVG(L20_REQAVG), 2), 0) L20_REQPT
			, NVL(ROUND(AVG(L30_REQAVG), 2), 0) L30_REQPT
			, NVL(ROUND(AVG(L40_REQAVG), 2), 0) L40_REQPT
		FROM STO WHERE ORGNO = #{orgno} GROUP BY ORGNO

	</select>



	<select id="EvalSQL.dolistOrgChart3" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistOrgChart3
			조직 평가 결과 - 상세결과1 - 직무별 평균 점수

		*/
		WITH STO AS (
			SELECT AA.EVAL_SEQ, AA.ORGNO, AA.EVAL_YEAR, AA.JOBNO, UFN_JOBNM(AA.JOBNO) AS JOBNM
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L10_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L20_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L30_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'CMM' THEN AA.JOBPT END) AS L40_CMMAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L10_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L20_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L30_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' AND AA.PPR_PCD = 'JOB' THEN AA.JOBPT END) AS L40_JOBAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L10' THEN AA.JOBPT END) AS L10_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L20' THEN AA.JOBPT END) AS L20_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L30' THEN AA.JOBPT END) AS L30_TOTAVG
				, AVG(CASE WHEN AA.JLVL_PCD = 'L40' THEN AA.JOBPT END) AS L40_TOTAVG
				, AVG(AA.JOBPT) AS AVG_TOTAVG
			FROM (
				SELECT EVL.EVAL_SEQ
					, EVL.EVAL_YEAR
					, MSE.ORGNO
					, USR.JLVL_PCD
					, MSE.EVEEUID AS USERID
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, LOG.QUE_SEQ
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(AVG(UFN_REQPOINT(LOG.PPR_PCD, LOG.PPR_SEQ, LOG.QUE_SEQ, USR.JLVL_PCD)) / 20, 0) AS REQPT
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.USEYN = 'Y'
					AND EVL.EVAL_YEAR = #{eval_year}
				GROUP BY EVL.EVAL_SEQ, EVL.EVAL_YEAR, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO, AA.JOBNO
		)

		SELECT JOBNO, UFN_JOBNM(JOBNO) AS JOBNM
			, NVL(ROUND(AVG(L10_TOTAVG), 2), 0) L10_TOTPT
			, NVL(ROUND(AVG(L20_TOTAVG), 2), 0) L20_TOTPT
			, NVL(ROUND(AVG(L30_TOTAVG), 2), 0) L30_TOTPT
			, NVL(ROUND(AVG(L40_TOTAVG), 2), 0) L40_TOTPT
			, NVL(ROUND(AVG(AVG_TOTAVG), 2), 0) AVG_TOTPT
		FROM STO GROUP BY JOBNO ORDER BY JOBNO

	</select>

	<select id="EvalSQL.dolistOrgChart4" resultType="DataMap">
		/*
			SQL ID : EvalSQL.dolistOrgChart4
			조직 평가 결과 - 상세결과1 - 연간 트랜드

		*/

			SELECT AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO
				, NVL(ROUND(AVG(AA.JOBPT), 2), 0) AS TOT_AVGPT /* 공통/직무 */
				, NVL(ROUND(AVG(CASE WHEN AA.PPR_PCD = 'CMM' THEN AA.JOBPT END), 2), 0) AS TOT_CMMPT /* 공통 */
				, NVL(ROUND(AVG(CASE WHEN AA.PPR_PCD = 'JOB' THEN AA.JOBPT END), 2), 0) AS TOT_JOBPT /* 직무 */
			FROM (
				SELECT EVL.EVAL_YEAR
					, EVL.EVAL_SEQ
					, MSE.ORGNO
					, UFN_ORGNM(MSE.ORGNO) AS ORGNM
					, USR.JLVL_PCD
					, UFN_CODENM('JLVL_PCD', USR.JLVL_PCD, NULL) AS JLVL_PNM
					, MSE.EVEEUID AS USERID
					, UFN_USERNM(MSE.EVEEUID) AS USERNM
					, LOG.PPR_SEQ
					, LOG.PPR_PCD
					, UFN_CODENM('PPR_PCD', LOG.PPR_PCD, NULL) AS PPR_PNM
					, (SELECT MAX(JOBNO) FROM TE_EVAL_PAPER WHERE EVAL_SEQ = EVL.EVAL_SEQ AND PPR_SEQ IN (
						SELECT PPR_SEQ FROM TE_EVAL_APPLY WHERE PPR_PCD = 'JOB' AND USEYN = 'Y' AND MSE_SEQ IN (
							SELECT MSE_SEQ FROM TE_EVAL_MSE WHERE EVEEUID = MSE.EVEEUID AND MSE_PCD = 'O' AND USEYN = 'Y'))) AS JOBNO
					, NVL(SUM(UFN_WEIGHTPT2(MSE.MSE_SEQ, LOG.PPR_PCD, LOG.APL_ANS)) / 20, 0) AS JOBPT
				FROM TE_EVAL_MSE MSE
				INNER JOIN TU_MEMBER USR
					ON USR.USERNO = MSE.EVEEUID AND USR.JLVL_PCD LIKE 'L%'
				INNER JOIN TE_EVAL EVL
					ON EVL.EVAL_SEQ = MSE.EVAL_SEQ AND EVL.ORGNO = MSE.ORGNO AND EVL.USEYN = 'Y'
				INNER JOIN TE_EVAL_MNG MNG
					ON EVL.EVAL_SEQ = MNG.EVAL_SEQ AND MNG.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLY APP
					ON APP.MSE_SEQ = MSE.MSE_SEQ AND APP.APL_SCD = 'O' AND APP.USEYN = 'Y'
				INNER JOIN TE_EVAL_APPLOG LOG
					ON LOG.MSE_SEQ = APP.MSE_SEQ AND LOG.PPR_SEQ = APP.PPR_SEQ AND LOG.PPR_PCD = APP.PPR_PCD
				WHERE 1 = 1
					AND MSE.ORGNO = #{orgno}
				GROUP BY EVL.EVAL_YEAR, EVL.EVAL_SEQ, MSE.EVEEUID, USR.JLVL_PCD, MSE.ORGNO, LOG.PPR_SEQ, LOG.PPR_PCD, LOG.QUE_SEQ
			) AA
			WHERE 1 = 1
			GROUP BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO
			ORDER BY AA.EVAL_YEAR, AA.EVAL_SEQ, AA.ORGNO
	</select>


</mapper>