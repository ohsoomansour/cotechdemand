<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Member_v_SQL">
	<!--  2023.9.2 TBIZ search -->
	<sql id="search">
		<if test="division_type == 'all' and division_value != ''">
       		AND (T.ID LIKE '%' || #{division_value} || '%'
       		OR T.USER_NAME LIKE '%' || #{division_value} || '%'
       		OR T.USER_MOBILE_NO LIKE '%' || #{division_value} || '%')
       	</if>
		<if test="division_type == 'userId' and division_value != ''">
       		AND T.ID LIKE '%' || #{division_value} || '%'
       	</if>
       	<if test="division_type == 'userNm' and division_value != ''">
       		AND T.USER_NAME LIKE '%' || #{division_value} || '%'
       	</if>
       	<if test="division_type == 'mPhone' and division_value != ''">
       		AND T.USER_MOBILE_NO LIKE '%' || #{division_value} || '%'
       	</if>
       	<!-- 가이드 신청  -->
       	<if test="agree_value != null and agree_value != ''">
         	AND T.AGREE_FLAG = #{agree_value}
         </if>

         <if test="strdate != null and strdate != ''">
       		<![CDATA[
       			AND TO_CHAR(T.regist_date,'YYYYMMDDHH24MISS') >= #{strdate} 
       		]]>
         </if>
         <if test="enddate != null and enddate != ''">
         	<![CDATA[
         		AND TO_CHAR(T.regist_date,'YYYYMMDDHH24MISS') <= #{enddate} 
         	]]>
         </if>	 	
         
	</sql>
	<select id="Member_v_SQL.doCountVMember" resultType="int">

		/*
			SQL ID : Member_v_SQL.doCountVMember 
			사용자 인원수
		*/
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				TBLMEMBER T
		]]>
		<include refid="search"/>
	</select>	
 
	<select id="Member_v_SQL.GetMembersInfoData" resultType="dataMap" parameterType="dataMap">	
		/*
			SQL ID : Member_v_SQL.GetMembersInfoData
			사용자 조회 리스트 -  확인 중 ... 
		*/
		<![CDATA[
			SELECT AA.*	
			FROM(
				SELECT
					ROW_NUMBER() OVER(ORDER BY REGIST_DATE DESC) AS RNUM,
					T.MEMBER_SEQNO,
					T.REGIST_DATE,
					T.MEMBER_TYPE,
					T.ID,
					T.USER_NAME,
					T.USER_EMAIL,
					T.USER_MOBILE_NO,
					T.BIZ_NAME,
					T.BIZ_EMAIL,
					T.BIZ_TEL_NO,
					T.AGREE_FLAG
					
				FROM 
					TBLMEMBER T
				WHERE 
					T.MEMBER_TYPE = 'R'
					or T.MEMBER_TYPE = 'B'
					or T.MEMBER_TYPE = 'TLO'
					or T.MEMBER_TYPE = 'ADMIN'
					and T.delete_flag = 'N'
		]]>	
		<include refid="search"/>
		<![CDATA[
			) AA
			WHERE 
				AA.RNUM BETWEEN (#{page}::INT -1) * (#{rows}::INT) + 1 AND #{page}::INT * #{rows}::INT
        ]]>	
	</select>

	
	<select id="Member_v_SQL.doCountMemberId" resultType="int">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doCountMemberId
			아이디 중복검사
		*/
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				TBLMEMBER
			WHERE
				ID = #{id}
		]]>
	</select>
	
	<select id="Member_v_SQL.doCountBizRegno" resultType="int">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doCountBizRegno
			사업자등록번호 중복여부
		*/
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				TBLBUSINESS
			WHERE
				BIZ_REGNO = #{biz_regno}
				
		]]>
	</select>
	<select id="Member_v_SQL.getJoinApprovedFlag" parameterType="dataMap" resultType="dataMap">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.getJoinApprovedFlag
			가입승인 확인
		*/
		<![CDATA[
			SELECT
				agree_flag
			FROM
				TBLMEMBER
			WHERE
				member_seqno = #{seqno}::INT
				
		]]>
	</select>
	
	
	<insert id="Member_v_SQL.doInsertBusiness" parameterType="dataMap">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doInsertBusiness
			회원가입 - 기업
		*/
		<![CDATA[
			INSERT INTO TBLBUSINESS
			(
				BIZ_SEQNO,
				BIZ_SIZE,
				BIZ_REGNO,
				BIZ_NAME,
				OWNER,
				TEL_NO,
				ZIPCODE,
				ADDRESS1,
				ADDRESS2,
				BIZ_TYPE,
				BIZ_ITEM,
				MAJOR_ITEMS,
				EST_DATE,
				EMPLOY_COUNT,
				SALES_YEAR,
				SALES_TOTAL,
				VERI_FLAG,
				VERI_DATE,
				BIZ_IMAGE,
				HOMEPAGE,
				RND_REGISTNO,
				STD_CLASS_CD1,
				STD_CLASS_CD2,
				STD_CLASS_CD3,
				STD_CLASS_CD4,
				STD_CLASS_CD5,
				DC_SECTOR,
				DC_SECTOR_DETAIL,
				DC_RND_DETAIL,
				SC_SECTOR,
				SC_SECTOR_DETAIL,
				INSERT_USER,
				INSERT_IP,
				INSERT_DATE,
				UPDATE_USER,
				UPDATE_IP,
				UPDATE_DATE,
				DELETE_FLAG,
				location
			)
			VALUES
			(
				#{biz_seqno},
				#{biz_size},
				#{biz_regno},
				#{biz_name},
				#{owner},
				#{tel_no},
				#{zipcode},
				#{address1},
				#{address2},
				#{biz_type},
				#{biz_item},
				#{major_items},
				NOW(),
				0,
				#{sales_year},
				0,
				'N',
				#{est_date},
				#{biz_image},
				#{homepage},
				#{rnd_registno},
				#{selStdClassCd1},
				#{selStdClassCd2},
				#{selStdClassCd3},
				#{selStdClassCd4},
				#{selStdClassCd5},
				#{dc_sector},
				#{dc_sector_detail},
				#{dc_rnd_detail},
				#{sc_sector},
				#{sc_sector_detail},
				NULL,
				#{insert_ip},
				NOW(),
				NULL,
				#{update_ip},
				NOW(),
				'N',
				#{location}
			)
		]]>
	</insert>
	
	<insert id="Member_v_SQL.doInsertMember" parameterType="dataMap">
		<!-- 2023-09-04 추정완 -->
		/*
			SQL ID : Member_v_SQL.doInsertMember
			회원가입 - 사용자
		*/
		<![CDATA[
			INSERT INTO TBLMEMBER
			(
				ID,
				PW,
				MEMBER_TYPE,
				USER_NAME,
				USER_EMAIL,
				USER_MOBILE_NO,
				USER_DEPART,
				USER_RANK,
				BIZ_TEL_NO,
				BIZ_EMAIL,
				BIZ_NAME,
				PW_TEMP_FLAG,
				PW_INVALID_COUNT,
				PW_NEXT_CHANGE_DATE,
				AGREE_FLAG,
				AGREE_FLAG_DATE,
				REGIST_ID,
				REGIST_DATE,
				DELETE_DATE,
				DELETE_FLAG,
				INSERT_ID,
				INSERT_DATE,
				UPDATE_ID,
				UPDATE_DATE
			)
			VALUES
			(
				#{id},
				#{pw},
				#{member_type},
				#{user_name},
				#{user_email},
				#{user_mobile_no},
				#{user_depart},
				#{user_rank},
				#{biz_tel_no},
				#{biz_email},
				#{biz_name},
				'N',
				'5',
				'1999-01-01'::timestamp,
				#{agree_flag},
				]]>
				<if test="agree_flag == 'N'">
         	<![CDATA[
         		'1999-01-01'::timestamp, 
         	]]>
         </if>
         <if test="agree_flag == 'Y'">
         	<![CDATA[
         		NOW(), 
         	]]>
         </if>	
				<![CDATA[
				#{id},
				NOW(),
				'2999-12-31'::timestamp,
				'N',
				#{id},
				NOW(),
				#{id},
				NOW()
			)
		]]>
	</insert>
	
	<select id="Member_v_SQL.doGetMemberInfo" resultType="dataMap">
		<!-- 2023-09-08 박성민 -->
		/*
			SQL ID : Member_v_SQL.doGetMemberInfo
			사용자 정보 가져오기
		*/
		<![CDATA[
			SELECT
			*
			FROM
			tblmember
			where member_seqno = #{member_seqno}::INT
		]]>
	</select>
	
	
	
	<update id="Member_v_SQL.doUpdatePw" parameterType="dataMap">
		<!-- 2023-09-22 박성민 -->
		/*
			SQL ID : Member_v_SQL.doUpdatePw
			사용자 패스워드 변경
		*/
		<![CDATA[
			UPDATE	
				TBLMEMBER
			SET
				PW = #{new_pwd}
			WHERE
				MEMBER_SEQNO = #{member_seqno}::INT
			AND
				ID = #{id}
			AND
				PW = #{pwd}
		]]>
	</update>
	
	<update id="Member_v_SQL.doUpdatePwFind" parameterType="dataMap">
		<!-- 2023-09-22 박성민 -->
		/*
			SQL ID : Member_v_SQL.doUpdatePw
			사용자 패스워드 변경
		*/
		<![CDATA[
			UPDATE	
				TBLMEMBER
			SET
				PW = #{new_pwd}
			WHERE
				MEMBER_SEQNO = #{member_seqno}::INT
			AND
				ID = #{id}
		]]>
	</update>
	
	<update id="Member_v_SQL.doUpdateBusiness" parameterType="dataMap">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doUpdateBusiness
			회원관리정보 변경 - 사업자정보
		*/
		<![CDATA[
			UPDATE	
				TBLBUSINESS
			SET
				BIZ_REGNO = #{biz_regno},
				BIZ_SIZE = #{biz_size},
				BIZ_NAME = #{biz_name},
				OWNER = #{owner},
				TEL_NO = #{tel_no},
				ZIPCODE = #{zipcode},
				ADDRESS1 = #{address1},
				ADDRESS2 = #{address2},
				STD_CLASS_CD1 = #{std_class_cd1},
				STD_CLASS_CD2 = #{std_class_cd2},
				STD_CLASS_CD3 = #{std_class_cd3},
				STD_CLASS_CD4 = #{std_class_cd4},
				STD_CLASS_CD5 = #{std_class_cd5},
				EMPLOY_COUNT = #{employ_count}::INT,
				SALES_YEAR = #{sales_year},
				RND_REGISTNO = #{rnd_registno},
				DC_SECTOR = #{dc_sector},
				DC_SECTOR_DETAIL = #{dc_sector_detail},
				DC_RND_DETAIL = #{dc_rnd_detail},
				SC_SECTOR = #{sc_sector},
				SC_SECTOR_DETAIL = #{sc_sector_detail},
				LOCATION = #{location},
				BIZ_TYPE = #{biz_type},
				BIZ_ITEM = #{biz_item},
				UPDATE_USER = ${member_seqno},
				UPDATE_DATE = NOW()
			WHERE
				BIZ_SEQNO = #{biz_seqno}::INT
		]]>
	</update>

	<update id="Member_v_SQL.doUpdateMember" parameterType="dataMap">
		<!-- 2023-09-08 박성민 -->
		/*
			SQL ID : Member_v_SQL.doUpdateMember
			회원관리정보 변경 - 사용자정보
		*/
		<![CDATA[
			UPDATE
				TBLMEMBER
			SET
				ID = #{id},
				USER_NAME = #{user_name},
				USER_EMAIL = #{user_email},
				USER_MOBILE_NO = #{user_mobile_no},
				USER_DEPART = #{user_depart},
				USER_RANK = #{user_rank},
				BIZ_NAME = #{biz_name},
				BIZ_EMAIL = #{biz_email},
				BIZ_TEL_NO = #{biz_tel_no},
				UPDATE_ID = '${id}',
				UPDATE_DATE = NOW()
			WHERE
				MEMBER_SEQNO = #{member_seqno}::INT
		]]>
	</update>
	<!-- meber_type이 ADMIN인 사람만 업데이트를 할 수 있다. -->
	<sql id="confirm_membertype">
		<if test="member_type =='ADMIN'">
			UPDATE
				TBLMEMBER 
			SET
				AGREE_FLAG = #{mode},
				AGREE_FLAG_DATE= NOW(),
				UPDATE_DATE= NOW(),
				UPDATE_ID = #{sessionid}

			WHERE
				MEMBER_SEQNO = #{seqno}::INT
       	</if>
	</sql>
	<update id="Member_v_SQL.doUpdateAgreement" parameterType="dataMap">
		/*
			SQL ID : Member_v_SQL.doUpdateAgreement
			회원관리정보 변경 - 사용자정보
		*/
		<include refid="confirm_membertype"/>
	</update>
	<select id="Member_v_SQL.doMemberBiz" resultType="dataMap">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doMemberBiz
			사업자등록증 확인
		*/
		<![CDATA[
			select *
			from(
			select replace(bizno ,'-','')as trans_number,vbi.*
			from voucher.nice_companyoutline_info vbi 
			)A
			where A.trans_number = #{bizRegno}
		]]>
	</select>
	
	<select id="Member_v_SQL.doAutoSearchBusiness" resultType="dataMap" parameterType="dataMap">
		<!-- 2021-04-21 추정완 -->
		/*
			SQL ID : Member_v_SQL.doAutoSearchBusiness
			회사명 자동검색
		*/
		<![CDATA[
			select t.applicant_nm 
			from tbiz.tbresearch t 
			where t.applicant_nm like '%${applicant_nm}%'
			group by t.applicant_nm ;
		]]>
	</select>
	<select id="Member_v_SQL.doCountFindId" resultType="int">

		/*
			SQL ID : Member_v_SQL.doCountFindId 
			아이디찾기 카운트
		*/
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				TBLMEMBER 
			where user_name = #{user_name}
			and user_email = #{user_email}
		]]>
	</select>	
	<select id="Member_v_SQL.doFindId" resultType="dataMap" parameterType="dataMap">	
		/*
			SQL ID : Member_v_SQL.doFindId
			아이디찾기
		*/
		<![CDATA[
			select *
			from tblmember
			where user_name = #{user_name}
			and user_email = #{user_email}
        ]]>	
	</select>
	<select id="Member_v_SQL.doCountFindPwd" resultType="int">

		/*
			SQL ID : Member_v_SQL.doCountFindPwd 
			비밀번호찾기 카운트
		*/
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				TBLMEMBER 
			where id = #{id}
		]]>
	</select>	
		<select id="Member_v_SQL.doFindPwd" resultType="dataMap" parameterType="dataMap">	
		/*
			SQL ID : Member_v_SQL.doFindPwd
			비밀번호찾기
		*/
		<![CDATA[
			select *
			from tblmember
			where id = #{id}
        ]]>	
	</select>
	
	<update id="Member_v_SQL.doUpdateCertification" parameterType="dataMap">
		<!-- 2023-09-22 박성민 -->
		/*
			SQL ID : Member_v_SQL.doUpdateCertification
			인증번호 생성
		*/
		<![CDATA[
			UPDATE	
				TBLMEMBER
			SET
				CERTIFICATION_NO = #{certification_no},
				CERTIFICATION_EXPIRED = now()
			WHERE
				MEMBER_SEQNO = #{member_seqno}::INT
		]]>
	</update>
	
	<select id="Member_v_SQL.doCheckCertification" resultType="dataMap" parameterType="dataMap">	
		/*
			SQL ID : Member_v_SQL.doCheckCertification
			인증번호 검증
		*/
		<![CDATA[
			select id, member_seqno
			from tblmember
			where user_name = #{user_name}
			AND CERTIFICATION_NO = #{certification_no}
			AND EXTRACT(EPOCH FROM (now() - CERTIFICATION_EXPIRED)) <= 300
			AND user_email = #{user_email}
        ]]>	
	</select>
</mapper>